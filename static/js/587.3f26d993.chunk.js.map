{"version":3,"file":"static/js/587.3f26d993.chunk.js","mappings":"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","sources":["webpack://pharmacy-shop/./src/components/ShoppingCart/ShoppingCart.module.css?81ff","webpack://pharmacy-shop/./src/components/DataUserForm/DataUserForm.module.css?6158","components/DataUserForm/DataUserForm.jsx","webpack://pharmacy-shop/./src/components/SavedDrugs/SavedDrugs.module.css?a7d3","webpack://pharmacy-shop/./src/components/SevDr/SevDr.module.css?5ae1","components/SevDr/SevDr.jsx","components/SavedDrugs/SavedDrugs.jsx","../node_modules/clsx/dist/clsx.mjs","components/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divDataUsSavDr\":\"ShoppingCart_divDataUsSavDr__0XJg3\",\"divTotButShC\":\"ShoppingCart_divTotButShC__qjrGa\",\"totShC\":\"ShoppingCart_totShC__R2hrs\",\"buttonShCForm\":\"ShoppingCart_buttonShCForm__Kx64Q\",\"divSvgBShC\":\"ShoppingCart_divSvgBShC__4idZs\",\"divSvgBDel\":\"ShoppingCart_divSvgBDel__mePP1\"};","// extracted by mini-css-extract-plugin\nexport default {\"allDivDUF\":\"DataUserForm_allDivDUF__Km4j8\",\"formDUF\":\"DataUserForm_formDUF__RtbhP\",\"inputDUForm\":\"DataUserForm_inputDUForm__r8cbI\"};","import css from \"./DataUserForm.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserName,\n    setUserEmail,\n    setUserPhone,\n    setUserAddress } from \"../../redux/drugsLSSlice\";\nimport { selectDataUser, selectScreenHeight, selectScreenWidth } from \"../../redux/selectors\";\n\nexport const DataUserForm = () => {\n    const disp = useDispatch();\n    const dataUser = useSelector(selectDataUser);\n    const realScreenHeight = useSelector(selectScreenHeight);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const allDivDUFRef = useRef(null);\n\n    const forInpN = (e) => {\n        const inpV = e.target.value;\n        disp(setUserName(inpV));\n    };\n\n    const forInpE = (e) => {\n        const inpV = e.target.value;\n        disp(setUserEmail(inpV));\n    };\n\n    const forInpP = (e) => {\n        const inpV = e.target.value;\n        disp(setUserPhone(inpV));\n    };\n\n    const forInpA = (e) => {\n        const inpV = e.target.value;\n        disp(setUserAddress(inpV));\n    };\n\n    useEffect(() => {\n        if (allDivDUFRef.current) {\n            const allDivDUF = allDivDUFRef.current;\n            allDivDUF.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivDUF.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivDUF.style.padding = `${realScreenWidth/50}px`;\n            const labelDUForms = document.querySelectorAll('.labelDUForm');\n            const pRegDUForms = document.querySelectorAll('.pRegDUForm');\n            if (labelDUForms && pRegDUForms) {\n                let coef = 1000 / realScreenWidth;\n                let secCoef = 1.3;\n                if (realScreenWidth < 900 && realScreenWidth >= 800) {\n                    coef = 900 / realScreenWidth;\n                } else if (realScreenWidth < 800 && realScreenWidth >= 700) {\n                    coef = 800 / realScreenWidth;\n                } else if (realScreenWidth < 700 && realScreenWidth >= 600) {\n                    coef = 700 / realScreenWidth;\n                } else if (realScreenWidth < 600 && realScreenWidth >= 500) {\n                    coef = 600 / realScreenWidth;\n                } else if (realScreenWidth < 500 && realScreenWidth >= 400) {\n                    coef = 500 / realScreenWidth;\n                } else if (realScreenWidth < 400 && realScreenWidth >= 350) {\n                    coef = 450 / realScreenWidth;\n                } else if (realScreenWidth < 350 && realScreenWidth >= 310) {\n                    coef = 390 / realScreenWidth;\n                    secCoef = 1.6;\n                } else if (realScreenWidth < 310) {\n                    coef = 380 / realScreenWidth;\n                    secCoef = 1.7;\n                };\n                const screenWidth = realScreenWidth < 1000 ? realScreenWidth : 1000;\n                labelDUForms.forEach(lab => {\n                    lab.style.width = screenWidth / (2.86 * coef) + 'px';\n                    lab.style.fontSize = (screenWidth > 500) ? screenWidth / 55.56 + 'px' : '9px';\n                    lab.style.margin = screenWidth / 65 + 'px';\n                    lab.style.marginRight = (screenWidth / 25) * coef * secCoef + 'px';\n                });\n                pRegDUForms.forEach(p => {\n                    p.style.marginLeft = screenWidth / 100 + 'px';\n                });\n            }\n        }\n    });\n    return (\n        <div ref={allDivDUFRef} className={css.allDivDUF}>\n            <form className={css.formDUF}>\n                <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Name</span>\n                <input className={css.inputDUForm} \n                value={dataUser.name}\n                onChange={e => forInpN(e)}\n                name='name'\n                type=\"text\"\n                autoComplete=\"on\"\n                autoFocus\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your name\"):(\"Name\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Email</span>\n                <input className={css.inputDUForm} \n                value={dataUser.email}\n                onChange={e => forInpE(e)}\n                name='email'\n                type=\"email\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your email\"):(\"Email\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Phone</span>\n                <input className={css.inputDUForm} \n                onInput={(e) => {\n                    e.target.value = e.target.value.replace(/[^0-9()+\\\\-]/g, '');\n                }}\n                value={dataUser.phone}\n                onChange={e => forInpP(e)}\n                name='phone'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your phone\"):(\"Phone\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Address</span>\n                <input className={css.inputDUForm} \n                value={dataUser.address}\n                onChange={e => forInpA(e)}\n                name='address'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your address\"):(\"Address\")} />\n            </label>\n            </form>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDivSD\":\"SavedDrugs_allDivSD__a3Zzi\",\"ulSD\":\"SavedDrugs_ulSD__4PaWR\"};","// extracted by mini-css-extract-plugin\nexport default {\"liSevDr\":\"SevDr_liSevDr__D-qwE\",\"drugDiv\":\"SevDr_drugDiv__42Fns\",\"favoriteBut\":\"SevDr_favoriteBut__n+Pj3\",\"isFavorite\":\"SevDr_isFavorite__2m8ZQ\",\"drugImg\":\"SevDr_drugImg__IeUJk\",\"infInpSevDr\":\"SevDr_infInpSevDr__9j43G\",\"infoDrug\":\"SevDr_infoDrug__XBIuj\",\"pInfoDrug\":\"SevDr_pInfoDrug__X-BRH\",\"inpButSevDr\":\"SevDr_inpButSevDr__oxgZk\",\"divInput\":\"SevDr_divInput__mxxip\",\"inputSavDr\":\"SevDr_inputSavDr__ox410\",\"minBut\":\"SevDr_minBut__-kx+N\",\"plusBut\":\"SevDr_plusBut__O7nIm\",\"addToBackedBut\":\"SevDr_addToBackedBut__q56jp\",\"divDelToBackedBut\":\"SevDr_divDelToBackedBut__FVUc0\"};","import css from \"./SevDr.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs, delDrFShop, setQuantityShop } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs, selectScreenWidth } from \"../../redux/selectors\";\n\n\nexport const SevDr = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    \n    const isFav = favDr.includes(drug.id);\n\n    const liSevDrRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugImgRef = useRef(null);\n    const pNumeDrugRef = useRef(null);\n    const inpButSevDrRef = useRef(null);\n    const addToBackedButRef = useRef(null);\n    const divDelToBackedButRef = useRef(null);\n    const inputSavDrRef = useRef(null);\n    const plusButRef = useRef(null); \n    const minButRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    const delDrSh = (d) => {\n        dispatch(delDrFShop(d));\n    };\n\n    const setStInp = (d, inpValue) => {\n        const data = {\n            id: d.id,\n            quantity: inpValue\n        };\n        dispatch(setQuantityShop(data));\n    };\n\n    const updateValueInp = (d, evt) => {\n        evt.preventDefault();\n        const inpValue = evt.target.value;\n        setStInp(d, inpValue);\n    };\n\n    const forBlur = (d, evt) => {\n        const inpV = evt.target.value;\n        if (Number(inpV) <= 0) {\n            delDrSh(d);\n        };\n    };\n\n    const forPlus = (d) => {\n        const newValP = Number(d.quantity) + 1;\n        if (newValP > 0) {\n            const newVP = String(newValP);\n            setStInp(d, newVP);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    const forMin = (d) => {\n        const newValM = Number(d.quantity) - 1;\n        if (newValM > 0) {\n            const newVM = String(newValM);\n            setStInp(d, newVM);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    useEffect(() => {\n        if (liSevDrRef.current && drugDivRef.current && pNumeDrugRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugImgRef.current &&\n            inpButSevDrRef.current && addToBackedButRef.current && divDelToBackedButRef.current &&\n            inputSavDrRef.current && plusButRef.current && minButRef.current) {\n            const drugLi = liSevDrRef.current;\n            const drugDiv = drugDivRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            const pNumeDrug = pNumeDrugRef.current;\n            const inpButSevDr = inpButSevDrRef.current;\n            const addToBackedBut = addToBackedButRef.current;\n            const divDelToBackedBut = divDelToBackedButRef.current;\n            const inputSavDr = inputSavDrRef.current;\n            const plusBut = plusButRef.current;\n            const minBut = minButRef.current;\n            \n                const widthSize = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2;\n                drugLi.style.height = `${widthSize/2}px`;\n                drugImg.style.width = widthSize / 2 + 'px';\n                drugImg.style.height = widthSize/4 + 'px';\n            \n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 100 + 'px';\n            pNumeDrug.style.marginTop = realScreenWidth / 25 + 'px';\n            pNumeDrug.style.fontSize = realScreenWidth / 50 + 'px';\n            inpButSevDr.style.marginBottom = realScreenWidth / 50 + 'px';\n            inputSavDr.style.width = realScreenWidth > 450 ? realScreenWidth / 24 + 'px' : realScreenWidth / 50 + 'px';\n            inputSavDr.style.height = realScreenWidth / 24 - 2 + 'px';\n            inputSavDr.style.borderRadius = realScreenWidth / 72 + 'px';\n            inputSavDr.style.fontSize = realScreenWidth / 60 + 'px';\n\n            plusBut.style.height = realScreenWidth / 24 + 'px';\n            minBut.style.height = realScreenWidth / 24 + 'px';\n            plusBut.style.width =realScreenWidth / 50 + 'px';\n            minBut.style.width = realScreenWidth / 50 + 'px';\n            plusBut.style.fontSize = realScreenWidth / 40 + 'px';\n            minBut.style.fontSize = realScreenWidth / 40 + 'px';\n            plusBut.style.right = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n            minBut.style.left = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n\n            addToBackedBut.style.width = realScreenWidth / 13 + 'px';\n            addToBackedBut.style.height = realScreenWidth / 24 + 'px';\n            addToBackedBut.style.gap = realScreenWidth/288 + 'px';\n            addToBackedBut.style.borderRadius = realScreenWidth/72 + 'px';\n            addToBackedBut.style.fontSize = realScreenWidth/80 + 'px';\n            addToBackedBut.style.padding = `0 ${realScreenWidth/144}px 0 ${realScreenWidth/96}px`;\n            divDelToBackedBut.style.width = realScreenWidth / 48 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n            };\n        }\n    });\n    return (\n        <li ref={liSevDrRef} className={css.liSevDr}>\n            <div ref={drugDivRef} className={css.drugDiv}>\n            <button type=\"button\" ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n                <div className={css.infInpSevDr}>\n                    <div ref={infoDrugRef} className={css.infoDrug}>\n                <p ref={pNumeDrugRef} className={css.pNumeDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n                </div>\n                    <div ref={inpButSevDrRef} className={css.inpButSevDr}>\n                        <div className={css.divInput}>\n                            <button\n                                type=\"button\"\n                                ref={minButRef}\n                                className={css.minBut}\n                                onClick={() => forMin(drug)}\n                            ></button>\n                            <input\n                                ref={inputSavDrRef}\n                                className={css.inputSavDr}\n                                name='quantity'\n                                type=\"text\"\n                                onInput={(e) => {\n                                    e.target.value = e.target.value.replace(/[^0-9]/g, '');\n                                }}\n                                value={drug.quantity}\n                                onChange={e => updateValueInp(drug, e)}\n                                onBlur={e => forBlur(drug, e)}\n                            />\n                            <button\n                                type=\"button\"\n                                ref={plusButRef}\n                                className={css.plusBut}\n                                onClick={() => forPlus(drug)}\n                            ></button>\n                        </div>\n                        <button\n                            type=\"button\"\n                            ref={addToBackedButRef}\n                            className={css.addToBackedBut}\n                            onClick={() => delDrSh(drug)}>\n                <span>Delete</span>\n                <div ref={divDelToBackedButRef} className={css.divDelToBackedBut}></div>\n            </button>\n                </div>\n            </div>\n            </div>\n        </li>\n    )\n};","import { useEffect, useRef } from \"react\";\nimport css from \"./SavedDrugs.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectDrugsForShop, selectScreenHeight, selectScreenWidth } from \"../../redux/selectors\";\nimport { SevDr } from \"../SevDr/SevDr\";\n\nexport const SavedDrugs = ({message}) => {\n    const drugsSh = useSelector(selectDrugsForShop);\n    const realScreenWidth = useSelector(selectScreenWidth);\n    const realScreenHeight = useSelector(selectScreenHeight);\n\n    const allDivSDRef = useRef(null);\n    const ulSDRef = useRef(null);\n    const nothPRef = useRef(null);\n\n    useEffect(() => {\n        if (allDivSDRef.current) {\n            const allDivSD = allDivSDRef.current;\n            allDivSD.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivSD.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivSD.style.padding = `${realScreenWidth / 50}px`;\n            if (ulSDRef.current) {\n                const ulSD = ulSDRef.current;\n                ulSD.style.gap = realScreenWidth / 50 + 'px';\n            };\n            if (nothPRef.current) { \n                const nothP = nothPRef.current;\n                nothP.style.fontSize = realScreenWidth / 42 + 'px';\n            };\n        }\n    });\n    return (\n        <div ref={allDivSDRef} className={[css.allDivSD, 'allDivSD'].join(' ')}>\n            {drugsSh.length > 0 ? (\n            <ul ref={ulSDRef} className={[css.ulSD, 'ulSD'].join(' ')}>\n                {drugsSh.map(d => <SevDr key={d.id} drug={d}/>)}\n            </ul>\n            ) : (\n                    <p ref={nothPRef}>{message}</p>\n            )}\n        </div>\n    )\n};","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import css from \"./ShoppingCart.module.css\";\nimport { DataUserForm } from \"../DataUserForm/DataUserForm\";\nimport { SavedDrugs } from \"../SavedDrugs/SavedDrugs\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDrugsForShop, selectDataUser, selectError, selectScreenWidth } from \"../../redux/selectors\";\nimport { delAllDrSh } from \"../../redux/drugsLSSlice\";\nimport { orderDrugs } from \"../../redux/opertions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst ShoppingCart = () => {\n    const disp = useDispatch();\n\n    const realScreenWidth = useSelector(selectScreenWidth);\n    const drForSh = useSelector(selectDrugsForShop);\n    const dataUser = useSelector(selectDataUser);\n    const error = useSelector(selectError);\n\n    const message = useRef(\"You haven't selected any products yet\");\n    \n\n    let allPrice = 0;\n    if (drForSh.length > 0) {\n        let allPr = 0;\n        drForSh.forEach(dr => {\n            allPr += Number(dr.price.replace(/,/g, \".\")) * Number(dr.quantity);\n        });\n        allPrice = allPr.toFixed(2).replace(/\\./g, \",\")\n    };\n\n    const divDataUsSavDrRef = useRef(null);\n    const divTotButShCRef = useRef(null);\n    const buttonShDelRef = useRef(null);\n    const buttonShCFormRef = useRef(null);\n    const divSvgBDelRef = useRef(null);\n    const divSvgBShCRef = useRef(null);\n    const totShCRef = useRef(null);\n\n    const forAllDel = () => {\n        disp(delAllDrSh());\n    };\n\n    const forSubmit = (e) => {\n        e.preventDefault();\n        let allUD = false;\n        for (const key in dataUser) {\n            if (dataUser[key].trim() === '') {\n                allUD = false\n                break\n            } else {\n                allUD = true\n            };\n        };\n        if (!allUD) {\n            toast.error(<p style={{ fontSize: `14px`}}>Please fill in all customer details</p>)\n        } else if (drForSh.length < 1) { \n            toast.error(<p style={{ fontSize: `14px`}}>You haven't selected any products yet</p>)\n        } else if (error) {\n            toast.error(<p style={{ fontSize: `14px`}}>Oops... Something went wrong. Please try again later</p>)\n        \n        } else {\n            const orderData = {\n            user: dataUser,\n            order: drForSh\n        };\n            disp(orderDrugs(orderData));\n            message.current = `${dataUser.name}, thank you for your order. Expect a call from our manager.`;\n        }\n    };\n\n    useEffect(() => {\n        if (error) {\n            toast.error(<p style={{ fontSize: `14px` }}>Oops... Something went wrong. Please try again later</p>);\n            message.current = \"You haven't selected any products yet\";\n    }\n    });\n\n    useEffect(() => {\n        if (divDataUsSavDrRef.current&& divTotButShCRef.current && buttonShCFormRef.current &&\n            divSvgBShCRef.current && totShCRef.current && buttonShDelRef.current && divSvgBDelRef.current) {\n            const divDataUsSavDr = divDataUsSavDrRef.current;\n            const divTotButShC = divTotButShCRef.current;\n            const buttonShDel = buttonShDelRef.current;\n            const buttonShCForm = buttonShCFormRef.current;\n            const divSvgBDel = divSvgBDelRef.current;\n            const divSvgBShC = divSvgBShCRef.current;\n            const totShC = totShCRef.current;\n            divDataUsSavDr.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.paddingTop = realScreenWidth / 100 + 'px';\n            buttonShDel.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShDel.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShDel.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShDel.style.gap = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShCForm.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShCForm.style.gap = realScreenWidth / 66.67 + 'px';\n            divSvgBDel.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBDel.style.height = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.height = realScreenWidth / 33.33 + 'px';\n            totShC.style.fontSize = realScreenWidth/41.667 + 'px';\n\n        }\n    });\n\n    return (\n        <>\n            <form className={css.formShC} onSubmit={forSubmit}>\n                <div ref={divDataUsSavDrRef} className={css.divDataUsSavDr}>\n                    <DataUserForm/>\n                    <SavedDrugs\n                        message={message.current}\n                    />\n                </div>\n                <div ref={divTotButShCRef} className={css.divTotButShC}>\n                    <p ref={totShCRef} className={css.totShC}><b>Total price: {allPrice} &#8372;</b></p>\n                    <button\n                        ref={buttonShDelRef}\n                        className={css.buttonShCForm}\n                        onClick={forAllDel}\n                        type=\"button\">\n                    <p>Delete All</p>\n                    <div ref={divSvgBDelRef} className={css.divSvgBDel}></div>\n                </button>\n                <button ref={buttonShCFormRef} className={css.buttonShCForm} type=\"submit\">\n                    <p>To buy</p>\n                    <div ref={divSvgBShCRef} className={css.divSvgBShC}></div>\n                </button>\n                </div>\n            <ToastContainer />\n            </form>\n        </>\n    )\n};\n\nexport default ShoppingCart;"],"names":["DataUserForm","disp","useDispatch","dataUser","useSelector","selectDataUser","realScreenHeight","selectScreenHeight","realScreenWidth","selectScreenWidth","allDivDUFRef","useRef","useEffect","current","allDivDUF","style","height","width","padding","concat","labelDUForms","document","querySelectorAll","pRegDUForms","coef","secCoef","screenWidth","forEach","lab","fontSize","margin","marginRight","p","marginLeft","_jsx","ref","className","css","children","_jsxs","join","value","name","onChange","e","inpV","target","setUserName","forInpN","type","autoComplete","autoFocus","placeholder","email","setUserEmail","forInpE","onInput","replace","phone","setUserPhone","forInpP","address","setUserAddress","forInpA","SevDr","_ref","drug","dispatch","favDr","selectFavoriteDrugs","isFav","includes","id","liSevDrRef","drugDivRef","favoriteRef","infoDrugRef","drugImgRef","pNumeDrugRef","inpButSevDrRef","addToBackedButRef","divDelToBackedButRef","inputSavDrRef","plusButRef","minButRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","delDrSh","d","delDrFShop","setStInp","inpValue","data","quantity","setQuantityShop","drugLi","drugDiv","favorite","infoDrug","drugImg","pNumeDrug","inpButSevDr","addToBackedBut","divDelToBackedBut","inputSavDr","plusBut","minBut","widthSize","right","top","gap","marginTop","marginBottom","borderRadius","left","classList","add","remove","onClick","src","image","alt","price","dataWasAdded","newValM","Number","newVM","String","forMin","evt","preventDefault","updateValueInp","onBlur","forBlur","newValP","newVP","forPlus","SavedDrugs","message","drugsSh","selectDrugsForShop","allDivSDRef","ulSDRef","nothPRef","allDivSD","length","map","r","t","f","n","Array","isArray","o","arguments","drForSh","error","selectError","allPrice","allPr","dr","toFixed","divDataUsSavDrRef","divTotButShCRef","buttonShDelRef","buttonShCFormRef","divSvgBDelRef","divSvgBShCRef","totShCRef","toast","divDataUsSavDr","divTotButShC","buttonShDel","buttonShCForm","divSvgBDel","divSvgBShC","totShC","paddingTop","_Fragment","onSubmit","allUD","key","trim","orderData","user","order","orderDrugs","delAllDrSh","ToastContainer"],"sourceRoot":""}