{"version":3,"file":"static/js/728.c9e830b6.chunk.js","mappings":"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","sources":["webpack://pharmacy-shop/./src/components/ShoppingCart/ShoppingCart.module.css?81ff","webpack://pharmacy-shop/./src/components/DataUserForm/DataUserForm.module.css?6158","components/DataUserForm/DataUserForm.jsx","webpack://pharmacy-shop/./src/components/SavedDrugs/SavedDrugs.module.css?a7d3","webpack://pharmacy-shop/./src/components/SevDr/SevDr.module.css?5ae1","components/SevDr/SevDr.jsx","components/SavedDrugs/SavedDrugs.jsx","components/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divDataUsSavDr\":\"ShoppingCart_divDataUsSavDr__0XJg3\",\"divTotButShC\":\"ShoppingCart_divTotButShC__qjrGa\",\"totShC\":\"ShoppingCart_totShC__R2hrs\",\"buttonShCForm\":\"ShoppingCart_buttonShCForm__Kx64Q\",\"divSvgBShC\":\"ShoppingCart_divSvgBShC__4idZs\"};","// extracted by mini-css-extract-plugin\nexport default {\"allDivDUF\":\"DataUserForm_allDivDUF__Km4j8\",\"inputDUForm\":\"DataUserForm_inputDUForm__r8cbI\"};","import css from \"./DataUserForm.module.css\";\nimport { useEffect, useRef } from \"react\";\n\nexport const DataUserForm = ({ realScreenHeight }) => {\n    const realScreenWidth = window.innerWidth;\n\n\n    const allDivDUFRef = useRef(null);\n\n    useEffect(() => {\n        if (allDivDUFRef.current) {\n            const allDivDUF = allDivDUFRef.current;\n            allDivDUF.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivDUF.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivDUF.style.padding = `${realScreenWidth/50}px`;\n            const labelDUForms = document.querySelectorAll('.labelDUForm');\n            const pRegDUForms = document.querySelectorAll('.pRegDUForm');\n            if (labelDUForms && pRegDUForms) {\n                const coef = 1000 / realScreenWidth;\n                const screenWidth = realScreenWidth < 1000 ? realScreenWidth : 1000;\n                labelDUForms.forEach(lab => {\n                    lab.style.width = screenWidth / (2.86 * coef) + 'px';\n                    lab.style.fontSize = (screenWidth > 500) ? screenWidth / 55.56 + 'px' : '9px';\n                    lab.style.margin = screenWidth / 65 + 'px';\n                    lab.style.marginRight = (screenWidth / 25) * coef + 'px';\n                });\n                pRegDUForms.forEach(p => {\n                    p.style.marginLeft = screenWidth / 100 + 'px';\n                });\n            }\n        }\n    });\n    return (\n        <div ref={allDivDUFRef} className={css.allDivDUF}>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Name</span>\n                <input className={css.inputDUForm} \n                name='name'\n                type=\"text\"\n                autoComplete=\"on\"\n                autoFocus\n                placeholder={realScreenWidth > 410 ? (\"Please, enter your name\"):(\"Name\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Email</span>\n                <input className={css.inputDUForm} \n                name='email'\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder={realScreenWidth > 410 ? (\"Please, enter your email\"):(\"Email\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Phone</span>\n                <input className={css.inputDUForm} \n                name='phone'\n                type=\"text\"\n                autoComplete=\"off\"\n                placeholder={realScreenWidth > 410 ? (\"Please, enter your phone\"):(\"Phone\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Address</span>\n                <input className={css.inputDUForm} \n                name='address'\n                type=\"text\"\n                autoComplete=\"off\"\n                placeholder={realScreenWidth > 410 ? (\"Please, enter your address\"):(\"Address\")} />\n            </label>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDivSD\":\"SavedDrugs_allDivSD__a3Zzi\",\"ulSD\":\"SavedDrugs_ulSD__4PaWR\"};","// extracted by mini-css-extract-plugin\nexport default {\"liSevDr\":\"SevDr_liSevDr__D-qwE\",\"drugDiv\":\"SevDr_drugDiv__42Fns\",\"favoriteBut\":\"SevDr_favoriteBut__n+Pj3\",\"isFavorite\":\"SevDr_isFavorite__2m8ZQ\",\"drugImg\":\"SevDr_drugImg__IeUJk\",\"infoDrug\":\"SevDr_infoDrug__XBIuj\",\"pInfoDrug\":\"SevDr_pInfoDrug__X-BRH\"};","import css from \"./SevDr.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs } from \"../../redux/selectors\";\n\n\nexport const SevDr = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    \n    const isFav = favDr.includes(drug.id);\n\n    const liSevDrRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugImgRef = useRef(null);\n    const pNumeDrugRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    useEffect(() => {\n        if (liSevDrRef.current && drugDivRef.current && pNumeDrugRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugImgRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const drugLi = liSevDrRef.current;\n            const drugDiv = drugDivRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            const pNumeDrug = pNumeDrugRef.current;\n            const drugsUl = document.querySelector('.allDivSD');\n            if (drugsUl) {\n                const widthSize = drugsUl.clientWidth;\n                drugLi.style.height = `${widthSize/2}px`;\n                drugImg.style.width = widthSize / 2 + 'px';\n                drugImg.style.height = widthSize/4 + 'px';\n            };\n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 100 + 'px';\n            pNumeDrug.style.marginTop = realScreenWidth / 25 + 'px';\n            pNumeDrug.style.fontSize = realScreenWidth / 50 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n                \n            };\n        }\n    });\n    return (\n        <li ref={liSevDrRef} className={css.liSevDr}>\n            <div ref={drugDivRef} className={css.drugDiv}>\n            <button ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n            <div ref={infoDrugRef} className={css.infoDrug}>\n                <p ref={pNumeDrugRef} className={css.pNumeDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n            </div>\n            </div>\n        </li>\n    )\n};","import { useEffect, useRef } from \"react\";\nimport css from \"./SavedDrugs.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectDrugsForShop } from \"../../redux/selectors\";\nimport { SevDr } from \"../SevDr/SevDr\";\n\nexport const SavedDrugs = ({realScreenHeight}) => {\n    const drugsSh = useSelector(selectDrugsForShop);\n\n    const allDivSDRef = useRef(null);\n    const ulSDRef = useRef(null);\n\n    useEffect(() => {\n        if (allDivSDRef.current && ulSDRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const allDivSD = allDivSDRef.current;\n            const ulSD = ulSDRef.current;\n            allDivSD.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivSD.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            ulSD.style.gap = realScreenWidth / 50 + 'px';\n            allDivSD.style.padding = `${realScreenWidth/50}px`;\n        }\n    });\n    return (\n        <div ref={allDivSDRef} className={[css.allDivSD, 'allDivSD'].join(' ')}>\n            <ul ref={ulSDRef} className={[css.ulSD, 'ulSD'].join(' ')}>\n                {drugsSh.map(d => <SevDr key={d.id} drug={d}/>)}\n            </ul>\n        </div>\n    )\n};","import css from \"./ShoppingCart.module.css\";\nimport { DataUserForm } from \"../DataUserForm/DataUserForm\";\nimport { SavedDrugs } from \"../SavedDrugs/SavedDrugs\";\nimport { useEffect, useRef } from \"react\";\n\nconst ShoppingCart = () => {\n    const realScreenHeight = window.innerHeight;\n\n    const divDataUsSavDrRef = useRef(null);\n    const divTotButShCRef = useRef(null);\n    const buttonShCFormRef = useRef(null);\n    const divSvgBShCRef = useRef(null);\n    const totShCRef = useRef(null);\n\n    useEffect(() => {\n        if (divDataUsSavDrRef.current&& divTotButShCRef.current && buttonShCFormRef.current &&\n            divSvgBShCRef.current && totShCRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const divDataUsSavDr = divDataUsSavDrRef.current;\n            const divTotButShC = divTotButShCRef.current;\n            const buttonShCForm = buttonShCFormRef.current;\n            const divSvgBShC = divSvgBShCRef.current;\n            const totShC = totShCRef.current;\n            divDataUsSavDr.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.gap = realScreenWidth / 10 + 'px';\n            divTotButShC.style.paddingTop = realScreenWidth / 100 + 'px';\n            buttonShCForm.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShCForm.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShCForm.style.gap = realScreenWidth/66.67 + 'px';\n            divSvgBShC.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.height = realScreenWidth / 33.33 + 'px';\n            totShC.style.fontSize = realScreenWidth/41.667 + 'px';\n\n        }\n    });\n\n    return (\n        <>\n            <form className={css.formShC}>\n                <div ref={divDataUsSavDrRef} className={css.divDataUsSavDr}>\n                    <DataUserForm realScreenHeight={realScreenHeight}/>\n                    <SavedDrugs realScreenHeight={realScreenHeight}/>\n                </div>\n                <div ref={divTotButShCRef} className={css.divTotButShC}>\n                        <p ref={totShCRef} className={css.totShC}><b>Total price: </b></p>\n                <button ref={buttonShCFormRef} className={css.buttonShCForm} type=\"submit\">\n                    <p>To buy</p>\n                    <div ref={divSvgBShCRef} className={css.divSvgBShC}></div>\n                </button>\n                </div>\n            </form>\n        </>\n    )\n};\n\nexport default ShoppingCart;"],"names":["DataUserForm","_ref","realScreenHeight","realScreenWidth","window","innerWidth","allDivDUFRef","useRef","useEffect","current","allDivDUF","style","height","width","padding","concat","labelDUForms","document","querySelectorAll","pRegDUForms","coef","screenWidth","forEach","lab","fontSize","margin","marginRight","p","marginLeft","_jsxs","ref","className","css","children","join","_jsx","name","type","autoComplete","autoFocus","placeholder","SevDr","drug","dispatch","useDispatch","isFav","useSelector","selectFavoriteDrugs","includes","id","liSevDrRef","drugDivRef","favoriteRef","infoDrugRef","drugImgRef","pNumeDrugRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","drugLi","drugDiv","favorite","infoDrug","drugImg","pNumeDrug","drugsUl","querySelector","widthSize","clientWidth","right","top","gap","marginTop","classList","add","remove","onClick","src","image","alt","price","dataWasAdded","SavedDrugs","drugsSh","selectDrugsForShop","allDivSDRef","ulSDRef","allDivSD","ulSD","map","d","innerHeight","divDataUsSavDrRef","divTotButShCRef","buttonShCFormRef","divSvgBShCRef","totShCRef","divDataUsSavDr","divTotButShC","buttonShCForm","divSvgBShC","totShC","paddingTop","borderRadius","_Fragment"],"sourceRoot":""}