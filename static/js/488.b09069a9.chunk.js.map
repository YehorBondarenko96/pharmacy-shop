{"version":3,"file":"static/js/488.b09069a9.chunk.js","mappings":"8LACA,EAAuC,6CAAvC,EAAqG,uCAArG,EAA2J,qCAA3J,EAA+M,qCAA/M,EAAqQ,uCAArQ,EAAgU,0C,2BCKnTA,EAAW,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACjBC,GAAOC,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAoBC,EAAAA,EAAAA,QAAO,MAqBjC,OAfAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAkBG,QAAS,CAC3B,IAAMC,EAAkBC,OAAOC,WACzBC,EAAiBP,EAAkBG,QACzCI,EAAeC,MAAMC,MAAQL,EAAkB,IAAM,KACrDG,EAAeC,MAAME,OAASN,EAAkB,GAAK,KACrDG,EAAeC,MAAMG,SAAWP,EAAkB,IAAM,KACpDV,EAASkB,KAAOf,EAChBU,EAAeM,UAAUC,IAAIC,GAE7BR,EAAeM,UAAUG,OAAOD,EAGxC,CACJ,KAEIE,EAAAA,EAAAA,KAAA,UACIC,IAAKlB,EACLmB,UAAWJ,EACXK,KAAK,SACLC,QAAS,kBAxBCT,EAwBclB,EAASkB,QAvBrCjB,GAAK2B,EAAAA,EAAAA,IAASV,IADD,IAACA,CAwB0B,EAACW,SAEpC7B,EAAS8B,MAGtB,EClCaC,EAAiB,SAAHhC,GAA4B,IAAvBiC,EAAgBjC,EAAhBiC,iBACtBC,GAAa7B,EAAAA,EAAAA,IAAY8B,EAAAA,IACzBjC,GAAOC,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpB8B,GAA0B5B,EAAAA,EAAAA,QAAO,MACjC6B,GAAoB7B,EAAAA,EAAAA,QAAO,MAC3B8B,GAAkB9B,EAAAA,EAAAA,QAAO,MACzBD,GAAoBC,EAAAA,EAAAA,QAAO,MAiCjC,OA3BAC,EAAAA,EAAAA,YAAU,WACN,IAAM8B,EAAWL,EAAWM,KAAI,SAAAC,GAAC,OAAIA,EAAEtB,EAAE,IACzC,GAAIiB,EAAwB1B,SAAW2B,EAAkB3B,SACrD4B,EAAgB5B,SAAWH,EAAkBG,QAAS,CACtD,IAAMC,EAAkBC,OAAOC,WACzB6B,EAAuBN,EAAwB1B,QAC/CiC,EAAiBN,EAAkB3B,QACnCkC,EAAeN,EAAgB5B,QACrCgC,EAAqB3B,MAAME,OAAM,GAAA4B,OAAMZ,EAAmB,IAAG,MAC7DU,EAAe5B,MAAM+B,OAAM,GAAAD,OAAMlC,EAAkB,GAAE,YACrDgC,EAAe5B,MAAMG,SAAQ,GAAA2B,OAAMlC,EAAkB,GAAE,MACvDiC,EAAa7B,MAAMgC,QAAO,GAAAF,OAAMlC,EAAkB,GAAE,OAAAkC,OAAMlC,EAAkB,GAAE,MAC9EiC,EAAa7B,MAAMiC,IAAG,GAAAH,OAAMlC,EAAkB,GAAE,MAChD,IAAMG,EAAiBP,EAAkBG,QACzCI,EAAeC,MAAMC,MAAQL,EAAkB,IAAM,KACrDG,EAAeC,MAAME,OAASN,EAAkB,GAAK,KACrDG,EAAeC,MAAMG,SAAWP,EAAkB,IAAM,KAEnD4B,EAASU,SAAS7C,GAGnBU,EAAeM,UAAUG,OAAOD,GAFhCR,EAAeM,UAAUC,IAAIC,EAKrC,CACJ,KAGAE,EAAAA,EAAAA,KAAA,OAAKC,IAAKW,EAAyBV,UAAWJ,EAAyBQ,SAClEI,EAAWgB,OAAS,GACbC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtB,SAAA,EACIN,EAAAA,EAAAA,KAAA,MAAIC,IAAKY,EAAmBX,UAAWJ,EAAmBQ,SAAC,gBAC3DqB,EAAAA,EAAAA,MAAA,MAAI1B,IAAKa,EAAiBZ,UAAWJ,EAAiBQ,SAAA,EAClDN,EAAAA,EAAAA,KAAA,MAAIE,UAAWJ,EAAiBQ,UAC5BN,EAAAA,EAAAA,KAAA,UAChBC,IAAKlB,EACLmB,UAAWJ,EACXK,KAAK,SACLC,QA1CM,WACV1B,GAAK2B,EAAAA,EAAAA,IAAS,IAClB,EAwCuBC,SAClB,qBAIgBI,EAAWM,KAAI,SAAAa,GAAE,OACd7B,EAAAA,EAAAA,KAAA,MAAgBE,UAAWJ,EAAiBQ,UACxCN,EAAAA,EAAAA,KAACzB,EAAQ,CAACE,SAAUoD,KADfA,EAAGlC,GAEvB,WAKLK,EAAAA,EAAAA,KAAA,KAAAM,SAAG,yBAIf,E,kBC3EA,GAAgB,gBAAkB,mCAAmC,QAAU,4BCA/E,EAAyB,qBAAzB,EAAwD,sBAAxD,EAA4F,0BAA5F,EAAmI,yBAAnI,EAAsK,sBAAtK,EAA6M,6BAA7M,EAA8P,gCAA9P,EAAkT,gCAAlT,EAA6V,uBAA7V,EAAgY,wB,SCKnXwB,EAAO,SAAHtD,GAAkB,IAAZuD,EAAIvD,EAAJuD,KACbC,GAAWrD,EAAAA,EAAAA,MACXsD,GAAQpD,EAAAA,EAAAA,IAAYqD,EAAAA,IACpBC,GAAOtD,EAAAA,EAAAA,IAAYuD,EAAAA,IAEnBC,EAAQJ,EAAMR,SAASM,EAAKpC,IAC5B2C,EAASH,EAAKI,MAAK,SAAAC,GAAE,OAAIA,EAAG7C,KAAOoC,EAAKpC,EAAE,IAE1C8C,GAAoBzD,EAAAA,EAAAA,QAAO,MAC3B0D,GAAa1D,EAAAA,EAAAA,QAAO,MACpB2D,GAAuB3D,EAAAA,EAAAA,QAAO,MAC9B4D,GAAc5D,EAAAA,EAAAA,QAAO,MACrB6D,GAAc7D,EAAAA,EAAAA,QAAO,MACrB8D,GAAY9D,EAAAA,EAAAA,QAAO,MACnB+D,GAAa/D,EAAAA,EAAAA,QAAO,MAUpBgE,EAAW,SAACrD,GACV0C,EALS,SAAC1C,GACdqC,GAASiB,EAAAA,EAAAA,IAAiBtD,GAC9B,CAIQuD,CAASvD,GAVA,SAACA,GACdqC,GAASmB,EAAAA,EAAAA,IAAiBxD,GAC9B,CAUQyD,CAASzD,EAEjB,EAUM0D,EAAa,SAACC,GACZhB,EALQ,SAACgB,GACbtB,GAASuB,EAAAA,EAAAA,IAAWD,GACxB,CAIQE,CAAQF,GAVA,SAACA,GACbtB,GAASyB,EAAAA,EAAAA,IAAWH,GACxB,CAUQI,CAAQJ,EAEhB,EAkDA,OAhDArE,EAAAA,EAAAA,YAAU,WACN,GAAIwD,EAAkBvD,SAAWwD,EAAWxD,SAAWyD,EAAqBzD,SACxE0D,EAAY1D,SAAW2D,EAAY3D,SAAW4D,EAAU5D,SAAW6D,EAAW7D,QAAS,CACvF,IAAMC,EAAkBC,OAAOC,WACzBsE,EAASb,EAAU5D,QACnB0E,EAAUlB,EAAWxD,QACrB2E,EAAiBpB,EAAkBvD,QACnC4E,EAAoBnB,EAAqBzD,QACzC6E,EAAWnB,EAAY1D,QACvB8E,EAAWnB,EAAY3D,QACvB+E,EAAUlB,EAAW7D,QACrBgF,EAAUC,SAASC,cAAc,YACvC,GAAIF,EAAS,CACT,IAAMG,GAAaH,EAAQI,YAAenF,EAAkB,GAAM,EAAIA,EAAgB,IAAI,EAC1FwE,EAAOpE,MAAMC,MAAK,GAAA6B,OAAMgD,EAAS,MACjCV,EAAOpE,MAAME,OAAM,GAAA4B,OAAkB,MAAZgD,EAAiB,KAC9C,CACAT,EAAQrE,MAAMG,SAAWP,EAAkB,IAAM,KACjDwE,EAAOpE,MAAMgF,cAAgBpF,EAAkB,GAAK,KACpD0E,EAAetE,MAAME,OAASN,EAAkB,GAAK,KACrD0E,EAAetE,MAAMiC,IAAMrC,EAAgB,IAAM,KACjD0E,EAAetE,MAAMiF,MAAQrF,EAAgB,GAAK,KAClD0E,EAAetE,MAAMkF,OAAStF,EAAgB,GAAK,KACnD0E,EAAetE,MAAMmF,aAAevF,EAAgB,GAAK,KACzD0E,EAAetE,MAAMG,SAAWP,EAAgB,GAAK,KACrD0E,EAAetE,MAAMgC,QAAO,KAAAF,OAAQlC,EAAgB,IAAG,SAAAkC,OAAQlC,EAAgB,GAAE,MACjF2E,EAAkBvE,MAAMC,MAAQL,EAAkB,GAAK,KACvD4E,EAASxE,MAAMC,MAAQL,EAAkB,GAAK,KAC9C4E,EAASxE,MAAME,OAASN,EAAkB,GAAK,KAC/C4E,EAASxE,MAAMiF,MAAQrF,EAAgB,GAAK,KAC5C4E,EAASxE,MAAMoF,IAAMxF,EAAkB,GAAK,KAC5C6E,EAASzE,MAAMqF,WAAazF,EAAkB,GAAK,KACnD6E,EAASzE,MAAMiC,IAAMrC,EAAkB,IAAM,KAC7C8E,EAAQ1E,MAAM+B,OAASnC,EAAkB,GAAK,KAC1CkD,EACA0B,EAASnE,UAAUC,IAAIC,GAEvBiE,EAASnE,UAAUG,OAAOD,GAG1BwC,EACAwB,EAAkBlE,UAAUC,IAAIC,GAEhCgE,EAAkBlE,UAAUG,OAAOD,EAG3C,CACJ,KAEIE,EAAAA,EAAAA,KAAA,MAAIC,IAAK6C,EAAW5C,UAAWJ,EAAWQ,UAC1CqB,EAAAA,EAAAA,MAAA,OAAK1B,IAAKyC,EAAYxC,UAAWJ,EAAYQ,SAAA,EACzCN,EAAAA,EAAAA,KAAA,UAAQC,IAAK2C,EAAa1C,UAAWJ,EAAiBM,QAAS,kBAAM4C,EAASjB,EAAKpC,GAAG,KACtFK,EAAAA,EAAAA,KAAA,OAAKC,IAAK8C,EAAY7C,UAAWJ,EAAa+E,IAAK9C,EAAK+C,MAAOC,IAAKhD,EAAKxB,QACzEoB,EAAAA,EAAAA,MAAA,OAAK1B,IAAK4C,EAAa3C,UAAWJ,EAAaQ,SAAA,EAC3CN,EAAAA,EAAAA,KAAA,KAAGE,UAAWJ,EAAcQ,UAACN,EAAAA,EAAAA,KAAA,KAAAM,SAAIyB,EAAKxB,UACtCoB,EAAAA,EAAAA,MAAA,KAAGzB,UAAWJ,EAAcQ,SAAA,EAACN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,YAAYyB,EAAKiD,MAAM,cACvDrD,EAAAA,EAAAA,MAAA,KAAGzB,UAAWJ,EAAcQ,SAAA,EAACN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,wBAAuB,IAAEyB,EAAKkD,oBAElEtD,EAAAA,EAAAA,MAAA,UAAQ1B,IAAKwC,EAAmBvC,UAAWJ,EAAoBM,QAAS,kBAAMiD,EAAWtB,EAAK,EAACzB,SAAA,CAC1FgC,GAAStC,EAAAA,EAAAA,KAAA,QAAAM,SAAM,YAAgBN,EAAAA,EAAAA,KAAA,QAAAM,SAAM,SACtCN,EAAAA,EAAAA,KAAA,OAAKC,IAAK0C,EAAsBzC,UAAWJ,WAK3D,ECjHaoF,EAAY,SAAH1G,GAA4B,IAAvBiC,EAAgBjC,EAAhBiC,iBACjB0E,GAAWtG,EAAAA,EAAAA,IAAYuG,EAAAA,IACvBC,GAAaxG,EAAAA,EAAAA,IAAYqD,EAAAA,IACzBoD,GAASzG,EAAAA,EAAAA,IAAY0G,EAAAA,IACrBC,GAAS3G,EAAAA,EAAAA,IAAY4G,EAAAA,IACrBC,GAAW7G,EAAAA,EAAAA,IAAY8B,EAAAA,IACvB/B,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B6G,GAA0BC,EAAAA,EAAAA,UAAST,GAASU,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,GAAgBzH,EAAAA,EAAAA,QAAOqG,IAyB7BpG,EAAAA,EAAAA,YAAU,WACN,IAAIyH,GAAQC,EAAAA,EAAAA,GAAOxB,GAEnB,GAAc,KAAVvG,EAAc,CAClB,IAAMgI,EAAQlB,EAASmB,MAAK,SAAA5F,GAAC,OAAIA,EAAEtB,KAAOf,CAAK,IAC/C8H,GAAQC,EAAAA,EAAAA,GAAOC,EAAME,UACzB,CAEI,GAAIJ,EAAShF,OAAS,EAAG,CACrB,OAAQ8D,GACZ,IAAK,IACGkB,EAASK,MAAK,SAACC,EAAGC,GAClB,OAAOD,EAAEzG,KAAK2G,cAAcD,EAAE1G,KAClC,IACI,MACJ,IAAK,IACDmG,EAASK,MAAK,SAACC,EAAGC,GAClB,OAAOA,EAAE1G,KAAK2G,cAAcF,EAAEzG,KAClC,IAOA+E,EAAO5D,OAAS,EAChBsE,EAASU,EAASpB,QAAO,SAAC6B,GAAO,OAAKA,EAAQ5G,KAAK6G,cAAc3F,SAAS6D,EAAO8B,cAAc,KAG/FpB,EAASU,EAEb,CACJ,GAAG,CAACpB,EAAQH,EAAUK,EAAQ5G,EAAO8G,KAErCzG,EAAAA,EAAAA,YAAU,WACFwH,EAAcvH,QAAQwC,OAAS,IAC/B0E,EAAaL,EAAMT,QAAO,SAAAhC,GAAC,OAAImD,EAAcvH,QAAQuC,SAAS6B,EAAE3D,GAAG,KACnE6G,EAAeT,EAAMT,QAAO,SAAAhC,GAAC,OAAKmD,EAAcvH,QAAQuC,SAAS6B,EAAE3D,GAAG,KAE9E,GAAG,CAACoG,EAAOT,EAAQH,EAAUK,IAE7B,IAAM6B,GAAqBrI,EAAAA,EAAAA,QAAO,MAC5BsI,GAAatI,EAAAA,EAAAA,QAAO,MAe1B,OAbAC,EAAAA,EAAAA,YAAU,WACN,GAAIoI,EAAmBnI,SAAWoI,EAAWpI,QAAS,CAClD,IAAMC,EAAkBC,OAAOC,WACzBkI,EAAkBF,EAAmBnI,QACrCgF,EAAUoD,EAAWpI,QAC3BqI,EAAgBhI,MAAME,OAAM,GAAA4B,OAAMZ,EAAmB,IAAG,MACxD8G,EAAgBhI,MAAM+B,OAAM,SAAAD,OAAYlC,EAAkB,GAAE,MAC5D+E,EAAQ3E,MAAMC,MAAK,GAAA6B,OAAMkG,EAAgBjD,YAAenF,EAAkB,GAAM,EAAC,MACjF+E,EAAQ3E,MAAMgC,QAAO,GAAAF,OAAMlC,EAAkB,GAAE,OAAAkC,OAAMlC,EAAkB,GAAE,MACzE+E,EAAQ3E,MAAMiC,IAAG,GAAAH,OAAMlC,EAAkB,GAAE,OAAAkC,OAAMlC,EAAkB,GAAE,KACzE,CACJ,KAGAa,EAAAA,EAAAA,KAAA,OAAKC,IAAKoH,EAAoBnH,UAAWJ,EAAAA,gBAAoBQ,SACpDyF,EAAMrE,OAAS,EAAKyE,EAAUzE,OAAS,GACpC1B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAtB,UACAqB,EAAAA,EAAAA,MAAA,MAAI1B,IAAKqH,EAAYpH,UAAW,CAACJ,EAAAA,QAAa,WAAW0H,KAAK,KAAKlH,SAAA,CAC1D6F,EAAUnF,KAAI,SAAAyG,GAAE,OAAKzH,EAAAA,EAAAA,KAAC8B,EAAI,CAA4CC,KAAM0F,GAA5CA,EAAG9H,GAAsB,IAAhB+H,KAAKC,SAAoC,IAClFpB,EAAYvF,KAAI,SAAAyG,GAAE,OAAKzH,EAAAA,EAAAA,KAAC8B,EAAI,CAA4CC,KAAM0F,GAA5CA,EAAG9H,GAAsB,IAAhB+H,KAAKC,SAAmC,UAK5F3H,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAtB,UACAN,EAAAA,EAAAA,KAAA,MAAIC,IAAKqH,EAAYpH,UAAW,CAACJ,EAAAA,QAAa,WAAW0H,KAAK,KAAKlH,SAC1DyF,EAAM/E,KAAI,SAAAyG,GAAE,OAAKzH,EAAAA,EAAAA,KAAC8B,EAAI,CAA4CC,KAAM0F,GAA5CA,EAAG9H,GAAsB,IAAhB+H,KAAKC,SAAmC,SAK1F3H,EAAAA,EAAAA,KAAA,KAAAM,SAAG,oBAIf,ECzHA,EAA6B,yBCA7B,EAA8B,4BCKjBsH,EAAS,WAClB,IAAMC,GAAkBhJ,EAAAA,EAAAA,IAAY0G,EAAAA,IAC9BvD,GAAWrD,EAAAA,EAAAA,MACjBgH,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDmC,EAAgBjC,EAAA,GAAEkC,EAAmBlC,EAAA,GAoBxC,OAZJ5G,EAAAA,EAAAA,YAAU,WACN,IAAME,EAAkBC,OAAOC,WAG3B0I,EADD5I,EAAkB,IACG,uCACdA,GAAmB,KAAOA,EAAkB,IAC9B,2BAEA,YAE5B,GAAG,KAGSa,EAAAA,EAAAA,KAAA,SACAgI,MAAOH,EACP3H,UAAWJ,EACXK,KAAK,OACLI,KAAK,SACL0H,YAAaH,EACbI,SAzBiB,SAACC,GAC1BA,EAAIC,iBACJ,IAAMC,EAAcF,EAAIG,OAAON,MAC/BhG,GAASuG,EAAAA,EAAAA,IAAUF,GACvB,GAwBJ,ECtCA,EAA6B,8BAA7B,EAAuE,6BAAvE,EAAkH,+BAAlH,EAAkK,kCAAlK,EAA+M,4BAA/M,EAAyP,+BAAzP,EAAiS,0BAAjS,EAAuU,6BCAvU,GAAgB,MAAQ,2BAA2B,SAAW,8BAA8B,WAAa,gCAAgC,UAAY,+BAA+B,SAAW,+BCGlLG,EAAc,WACvB,IAAM9J,GAAOC,EAAAA,EAAAA,MAKP8J,EAAW,SAACC,GACdhK,GAAKiK,EAAAA,EAAAA,IAAOD,GAChB,EAEA,OACI/G,EAAAA,EAAAA,MAAA,MAAIzB,UAAWJ,EAAAA,MAAUQ,SAAA,EACrBN,EAAAA,EAAAA,KAAA,MAAAM,UACIqB,EAAAA,EAAAA,MAAA,UAAQzB,UAAW,CAACJ,EAAAA,SAAcA,EAAAA,YAAgB0H,KAAK,KAAMpH,QAAS,WAAOqI,EAX/E,IAW0F,EAAEnI,SAAA,EACtFN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,YACPN,EAAAA,EAAAA,KAAA,OAAKE,UAAWJ,EAAAA,iBAGpBE,EAAAA,EAAAA,KAAA,MAAAM,UACIqB,EAAAA,EAAAA,MAAA,UAAQzB,UAAWJ,EAAAA,SAAcM,QAAS,WAAOqI,EAfnD,IAe8D,EAAEnI,SAAA,EAC1DN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,YACPN,EAAAA,EAAAA,KAAA,OAAKE,UAAWJ,EAAAA,iBAGpBE,EAAAA,EAAAA,KAAA,MAAAM,UACIqB,EAAAA,EAAAA,MAAA,UAAQzB,UAAW,CAACJ,EAAAA,SAAcA,EAAAA,WAAe0H,KAAK,KAAMpH,QAAS,WAAOqI,EAtB9E,IAsByF,EAAEnI,SAAA,EACrFN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,WACPN,EAAAA,EAAAA,KAAA,OAAKE,UAAWJ,EAAAA,kBAKhC,EC9Ba8I,EAAY,WACrB,IAAMC,GAAiB7J,EAAAA,EAAAA,QAAO,MACxB8J,GAAY9J,EAAAA,EAAAA,QAAO,MACnB+J,GAAc/J,EAAAA,EAAAA,QAAO,MAC3B2G,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCqD,EAAQnD,EAAA,GAAEoD,EAAWpD,EAAA,GAEtBmB,EAAI,SAGVf,GAA4BL,EAAAA,EAAAA,UAASoB,GAAEd,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCiD,EAAMhD,EAAA,GAAEiD,EAASjD,EAAA,GAElBV,GAAS3G,EAAAA,EAAAA,IAAY4G,EAAAA,KAE3BxG,EAAAA,EAAAA,YAAU,WACN,GAAI4J,EAAe3J,QACf,OAAQsG,GACJ,IAAK,IACD2D,EAAUnC,GACV6B,EAAe3J,QAAQU,UAAUC,IAAIC,GACrC,MACJ,IAAK,IACDqJ,EAdN,UAeMN,EAAe3J,QAAQU,UAAUC,IAAIC,GACrC,MACJ,QACIqJ,EAAUnC,GACV6B,EAAe3J,QAAQU,UAAUG,OAAOD,GAIxD,GAAG,CAAC0F,IAEJ,IAAM4D,EAAQ,SAARA,IACEN,EAAU5J,SAAW6J,EAAY7J,UACjC4J,EAAU5J,QAAQU,UAAUG,OAAOD,GACnCiJ,EAAY7J,QAAQU,UAAUG,OAAOD,GACrCV,OAAOiK,oBAAoB,QAASD,GACpCH,GAAY,GAEpB,EAqBA,OACIjJ,EAAAA,EAAAA,KAAA,OAAKE,UAAWJ,EAAeQ,UAC3BqB,EAAAA,EAAAA,MAAA,OAAKzB,UAAWJ,EAAcQ,SAAA,EAC1BqB,EAAAA,EAAAA,MAAA,UAAQ1B,IAAK4I,EAAgB3I,UAAWJ,EAAiBM,QAXnD,WACV4I,EACAI,IAZAN,EAAU5J,SAAW6J,EAAY7J,SACjCoK,YAAW,WACPL,GAAY,GACZH,EAAU5J,QAAQU,UAAUC,IAAIC,GAChCiJ,EAAY7J,QAAQU,UAAUC,IAAIC,GAClCV,OAAOmK,iBAAiB,QAASH,EACrC,GAAG,EAUX,EAKwF9I,SAAA,EACxEN,EAAAA,EAAAA,KAAA,KAAAM,SAAI4I,KACRlJ,EAAAA,EAAAA,KAAA,OAAKC,IAAK8I,EAAa7I,UAAWJ,QAEtCE,EAAAA,EAAAA,KAAA,OAAKC,IAAK6I,EAAW5I,UAAWJ,EAAWQ,UACvCN,EAAAA,EAAAA,KAACwI,EAAW,UAK5B,EC9EA,EAA6B,4BCGhBgB,EAAU,WACnB,OACI7H,EAAAA,EAAAA,MAAA,OAAKzB,UAAWJ,EAAeQ,SAAA,EAC3BN,EAAAA,EAAAA,KAAC4H,EAAM,KACP5H,EAAAA,EAAAA,KAAC4I,EAAS,MAGtB,ECgBA,EAnBa,WACT,IAAM5G,GAAWrD,EAAAA,EAAAA,MAEjBqD,GAASyH,EAAAA,EAAAA,OACTzH,GAAS0H,EAAAA,EAAAA,OAET,IAAMjJ,EAAmBrB,OAAOuK,YAEhC,OACIhI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtB,SAAA,EACIN,EAAAA,EAAAA,KAACwJ,EAAO,KACR7H,EAAAA,EAAAA,MAAA,OAAKzB,UAAWJ,EAAeQ,SAAA,EAC3BN,EAAAA,EAAAA,KAACQ,EAAc,CAACC,iBAAkBA,KAClCT,EAAAA,EAAAA,KAACkF,EAAS,CAACzE,iBAAkBA,SAI7C,C","sources":["webpack://pharmacy-shop/./src/components/PharmaciesList/PharmaciesList.module.css?e8a0","components/Pharmacy/Pharmacy.jsx","components/PharmaciesList/PharmaciesList.jsx","webpack://pharmacy-shop/./src/components/DrugsList/DrugsList.module.css?6fce","webpack://pharmacy-shop/./src/components/Drug/Drug.module.css?803a","components/Drug/Drug.jsx","components/DrugsList/DrugsList.jsx","webpack://pharmacy-shop/./src/components/Shop/Shop.module.css?1757","webpack://pharmacy-shop/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://pharmacy-shop/./src/components/FilterAlf/FilterAlf.module.css?6bb4","webpack://pharmacy-shop/./src/components/DropListAlf/DropListAlf.module.css?bd9c","components/DropListAlf/DropListAlf.jsx","components/FilterAlf/FilterAlf.jsx","webpack://pharmacy-shop/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.jsx","components/Shop/Shop.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"allPharmaciesListDiv\":\"PharmaciesList_allPharmaciesListDiv__GRnVQ\",\"pharmaciesHlll\":\"PharmaciesList_pharmaciesHlll__oavoJ\",\"pharmaciesUl\":\"PharmaciesList_pharmaciesUl__Bzm-Q\",\"pharmaciesLi\":\"PharmaciesList_pharmaciesLi__zBPjA\",\"phormasyButton\":\"PharmaciesList_phormasyButton__ryQfU\",\"phormasyButtonAct\":\"PharmaciesList_phormasyButtonAct__bK8h8\"};","import css from \"../PharmaciesList/PharmaciesList.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPhafm } from \"../../redux/filterSlice\";\nimport { selectFilterPharm } from \"../../redux/selectors\";\n\nexport const Pharmacy = ({ pharmacy }) => {\n    const disp = useDispatch();\n    const actId = useSelector(selectFilterPharm);\n\n    const phormasyButtonRef = useRef(null);\n\n    const butClick = (id) => {\n        disp(setPhafm(id));\n    }\n\n    useEffect(() => {\n        if (phormasyButtonRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const phormasyButton = phormasyButtonRef.current;\n            phormasyButton.style.width = realScreenWidth / 9.6 + 'px';\n            phormasyButton.style.height = realScreenWidth / 29 + 'px';\n            phormasyButton.style.fontSize = realScreenWidth / 103 + 'px';\n            if (pharmacy.id === actId) {\n                phormasyButton.classList.add(css.phormasyButtonAct);\n            } else {\n                phormasyButton.classList.remove(css.phormasyButtonAct);\n                \n            }\n        }\n    });\n    return (\n        <button\n            ref={phormasyButtonRef}\n            className={css.phormasyButton}\n            type=\"button\"\n            onClick={() => butClick(pharmacy.id)}\n        >\n            {pharmacy.name}\n        </button>\n    )\n};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectPharmacies, selectFilterPharm } from \"../../redux/selectors\";\nimport css from \"./PharmaciesList.module.css\";\nimport { Pharmacy } from \"../Pharmacy/Pharmacy\";\nimport { useRef, useEffect } from \"react\";\nimport { setPhafm } from \"../../redux/filterSlice\";\n\nexport const PharmaciesList = ({realScreenHeight}) => {\n    const pharmacies = useSelector(selectPharmacies); \n    const disp = useDispatch();\n    const actId = useSelector(selectFilterPharm);\n\n    const allPharmaciesListDivRef = useRef(null);\n    const pharmaciesHlllRef = useRef(null);\n    const pharmaciesUlRef = useRef(null);\n    const phormasyButtonRef = useRef(null);\n\n    const butCl = () => {\n        disp(setPhafm(\"\"));\n    }\n\n    useEffect(() => {\n        const allIdsPh = pharmacies.map(p => p.id);\n        if (allPharmaciesListDivRef.current && pharmaciesHlllRef.current &&\n            pharmaciesUlRef.current && phormasyButtonRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const allPharmaciesListDiv = allPharmaciesListDivRef.current;\n            const pharmaciesHlll = pharmaciesHlllRef.current; \n            const pharmaciesUl = pharmaciesUlRef.current;\n            allPharmaciesListDiv.style.height = `${realScreenHeight - 200}px`;\n            pharmaciesHlll.style.margin = `${realScreenWidth / 72}px 0 0 0`;\n            pharmaciesHlll.style.fontSize = `${realScreenWidth / 80}px`;\n            pharmaciesUl.style.padding = `${realScreenWidth / 72}px ${realScreenWidth / 48}px`;\n            pharmaciesUl.style.gap = `${realScreenWidth / 72}px`;\n            const phormasyButton = phormasyButtonRef.current;\n            phormasyButton.style.width = realScreenWidth / 9.6 + 'px';\n            phormasyButton.style.height = realScreenWidth / 29 + 'px';\n            phormasyButton.style.fontSize = realScreenWidth / 103 + 'px';\n            \n            if (!allIdsPh.includes(actId)) {\n                phormasyButton.classList.add(css.phormasyButtonAct);\n            } else {\n                phormasyButton.classList.remove(css.phormasyButtonAct);\n                \n            }\n        }\n    });\n\n    return (\n    <div ref={allPharmaciesListDivRef} className={css.allPharmaciesListDiv}>\n        {pharmacies.length > 0 ? (\n                <>\n                    <h3 ref={pharmaciesHlllRef} className={css.pharmaciesHlll}>Pharmacies</h3>\n                    <ul ref={pharmaciesUlRef} className={css.pharmaciesUl}>\n                        <li className={css.pharmaciesLi}>\n                            <button\n            ref={phormasyButtonRef}\n            className={css.phormasyButton}\n            type=\"button\"\n            onClick={butCl}\n        >\n            All pharmacies\n        </button>\n                        </li>\n                        {pharmacies.map(ph => (\n                            <li key={ph.id} className={css.pharmaciesLi}>\n                                <Pharmacy pharmacy={ph}/>\n            </li>\n        ))}\n                </ul>\n                </>\n        ) : (\n            <p>No pharmacies found</p>\n        )}\n    </div>\n)\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDrugsListDiv\":\"DrugsList_allDrugsListDiv__E4Lwl\",\"drugsUl\":\"DrugsList_drugsUl__-etsM\"};","// extracted by mini-css-extract-plugin\nexport default {\"drugLi\":\"Drug_drugLi__Dxa3K\",\"drugDiv\":\"Drug_drugDiv__LOWKM\",\"favoriteBut\":\"Drug_favoriteBut__3I3NY\",\"isFavorite\":\"Drug_isFavorite__r6vaN\",\"drugImg\":\"Drug_drugImg__U65Fi\",\"addToBackedBut\":\"Drug_addToBackedBut__vi6OH\",\"divAddToBackedBut\":\"Drug_divAddToBackedBut__J8JyQ\",\"divDelToBackedBut\":\"Drug_divDelToBackedBut__hu0aJ\",\"infoDrug\":\"Drug_infoDrug__R2Dp6\",\"pInfoDrug\":\"Drug_pInfoDrug__RtNQu\"};","import css from \"./Drug.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs, addDrFShop, delDrFShop } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs, selectDrugsForShop } from \"../../redux/selectors\";\n\nexport const Drug = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    const shDr = useSelector(selectDrugsForShop);\n\n    const isFav = favDr.includes(drug.id);\n    const inTrol = shDr.some(sd => sd.id === drug.id);\n\n    const addToBackedButRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const divAddToBackedButRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugLiRef = useRef(null);\n    const drugImgRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    const addDrSh = (d) => {\n        dispatch(addDrFShop(d));\n    };\n\n    const delDrSh = (d) => {\n        dispatch(delDrFShop(d));\n    };\n\n    const addTrOrDel = (d) => {\n        if (inTrol) {\n            delDrSh(d);\n        } else {\n            addDrSh(d);\n        }\n    };\n\n    useEffect(() => {\n        if (addToBackedButRef.current && drugDivRef.current && divAddToBackedButRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugLiRef.current && drugImgRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const drugLi = drugLiRef.current;\n            const drugDiv = drugDivRef.current;\n            const addToBackedBut = addToBackedButRef.current;\n            const divAddToBackedBut = divAddToBackedButRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            const drugsUl = document.querySelector('.drugsUl');\n            if (drugsUl) {\n                const widthSize = (drugsUl.clientWidth - (realScreenWidth / 45) * 2 - realScreenWidth/29)/2;\n                drugLi.style.width = `${widthSize}px`;\n                drugLi.style.height = `${widthSize * 1.176}px`;\n            };\n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            drugLi.style.paddingBottom = realScreenWidth / 72 + 'px';\n            addToBackedBut.style.height = realScreenWidth / 24 + 'px';\n            addToBackedBut.style.gap = realScreenWidth/288 + 'px';\n            addToBackedBut.style.right = realScreenWidth/72 + 'px';\n            addToBackedBut.style.bottom = realScreenWidth/72 + 'px';\n            addToBackedBut.style.borderRadius = realScreenWidth/72 + 'px';\n            addToBackedBut.style.fontSize = realScreenWidth/80 + 'px';\n            addToBackedBut.style.padding = `0 ${realScreenWidth/144}px 0 ${realScreenWidth/96}px`;\n            divAddToBackedBut.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.marginLeft = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 35 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n                \n            };\n            if (inTrol) {\n                divAddToBackedBut.classList.add(css.divDelToBackedBut);\n            } else {\n                divAddToBackedBut.classList.remove(css.divDelToBackedBut);\n                \n            }\n        }\n    });\n    return (\n        <li ref={drugLiRef} className={css.drugLi}>\n        <div ref={drugDivRef} className={css.drugDiv}>\n            <button ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n            <div ref={infoDrugRef} className={css.infoDrug}>\n                <p className={css.pInfoDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n            </div>\n            <button ref={addToBackedButRef} className={css.addToBackedBut} onClick={() => addTrOrDel(drug)}>\n                {inTrol ? <span>Delete</span> : <span>Add</span>}\n                <div ref={divAddToBackedButRef} className={css.divAddToBackedBut}></div>\n            </button>\n            </div>\n            </li>\n    )\n};","import { useSelector } from \"react-redux\";\nimport { selectDrugs, selectPharmacies, selectFavoriteDrugs, selectFilter, selectFilterPharm, selectFilterAlf } from \"../../redux/selectors\";\nimport css from \"./DrugsList.module.css\";\nimport { Drug } from \"../Drug/Drug\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const DrugsList = ({realScreenHeight}) => {\n    const allDrugs = useSelector(selectDrugs); \n    const fevDrugsId = useSelector(selectFavoriteDrugs);\n    const filter = useSelector(selectFilter);\n    const selAlf = useSelector(selectFilterAlf);\n    const allPharm = useSelector(selectPharmacies);\n    const actId = useSelector(selectFilterPharm);\n\n    const [drugs, setDrugs] = useState(allDrugs);\n    const [fevDrRend, setFevDrRend] = useState([]);\n    const [notFvDrRend, setNotFvDrRend] = useState([]);\n\n    const fevDrugsIdRef = useRef(fevDrugsId);\n\n    \n\n    // useEffect(() => {\n    //     switch (selAlf) {\n    //         case \"a\":\n    //             const drA = [...allDrugs];\n    //             drA.sort((a, b) => {\n    //                 return a.name.localeCompare(b.name);\n    //             });\n    //             setDrugs(drA);\n    //             break;\n    //         case \"z\":\n    //             const drZ = [...allDrugs];\n    //             drZ.sort((a, b) => {\n    //                 return b.name.localeCompare(a.name);\n    //             });\n    //             setDrugs(drZ);\n    //             break;\n    //         default:\n    //             setDrugs(allDrugs);\n    //     }\n    // }, [allDrugs, selAlf]);\n\n    useEffect(() => {\n        let pasDrugs = [...allDrugs];\n\n        if (actId !== \"\") {\n        const actPh = allPharm.find(p => p.id === actId);\n        pasDrugs = [...actPh.available];\n    };\n        \n        if (pasDrugs.length > 0) {\n            switch (selAlf) {\n        case \"a\":\n                pasDrugs.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n                break;\n            case \"z\":\n                pasDrugs.sort((a, b) => {\n                return b.name.localeCompare(a.name);\n            });\n                break;\n                default:\n                    break\n        };\n\n\n        if (filter.length > 0) {\n            setDrugs(pasDrugs.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase())));\n        }\n        else {\n            setDrugs(pasDrugs);\n        };\n        }\n    }, [filter, allDrugs, selAlf, actId, allPharm]);\n    \n    useEffect(() => {\n        if (fevDrugsIdRef.current.length > 0) {\n            setFevDrRend(drugs.filter(d => fevDrugsIdRef.current.includes(d.id)));\n            setNotFvDrRend(drugs.filter(d => !fevDrugsIdRef.current.includes(d.id)));\n        }\n    }, [drugs, filter, allDrugs, selAlf]);\n\n    const allDrugsListDivRef = useRef(null);\n    const drugsUlRef = useRef(null);\n\n    useEffect(() => {\n        if (allDrugsListDivRef.current && drugsUlRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const allDrugsListDiv = allDrugsListDivRef.current;\n            const drugsUl = drugsUlRef.current;\n            allDrugsListDiv.style.height = `${realScreenHeight - 200}px`;\n            allDrugsListDiv.style.margin = `0 0 0 ${realScreenWidth / 72}px`;\n            drugsUl.style.width = `${allDrugsListDiv.clientWidth - (realScreenWidth / 48) * 2}px`;\n            drugsUl.style.padding = `${realScreenWidth / 72}px ${realScreenWidth / 48}px`;\n            drugsUl.style.gap = `${realScreenWidth / 72}px ${realScreenWidth / 29}px`;\n        }\n    })\n\n    return (\n    <div ref={allDrugsListDivRef} className={css.allDrugsListDiv}>\n            {drugs.length > 0 ? (fevDrRend.length > 0 ? (\n                <>\n                <ul ref={drugsUlRef} className={[css.drugsUl, 'drugsUl'].join(' ')}>\n                        {fevDrRend.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr} />))}\n                        {notFvDrRend.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr}/>))}\n                        \n                </ul>\n                </>\n            ): (\n                <>\n                <ul ref={drugsUlRef} className={[css.drugsUl, 'drugsUl'].join(' ')}>\n                        {drugs.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr}/>))}\n                </ul>\n                </>\n        )\n        ) : (\n            <p>No drugs found</p>\n        )}\n    </div>\n)\n};","// extracted by mini-css-extract-plugin\nexport default {\"allShopDiv\":\"Shop_allShopDiv__-Okbb\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport { useState, useEffect } from 'react';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const [placeholderValue, setPlaceholderValue] = useState('');\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n    useEffect(() => {\n        const realScreenWidth = window.innerWidth;\n\n        if(realScreenWidth > 465){\n            setPlaceholderValue('Please start typing the desired name')\n        } else if(realScreenWidth <= 465 && realScreenWidth > 370){\n            setPlaceholderValue('Please start typing name')\n        } else {\n            setPlaceholderValue('Type name')\n        }\n    }, []);\n\n        return(\n                <input \n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder={placeholderValue}\n                onChange={updateStateForFilter}\n                />\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"allFiltAlf\":\"FilterAlf_allFiltAlf__idDN7\",\"secAllDiv\":\"FilterAlf_secAllDiv__PX7Lw\",\"allButtonFA\":\"FilterAlf_allButtonFA__sV2Ai\",\"allButtonFAAct\":\"FilterAlf_allButtonFAAct__C1yhB\",\"divArrow\":\"FilterAlf_divArrow__fkkZy\",\"divArrowAct\":\"FilterAlf_divArrowAct__n+tDs\",\"divDrL\":\"FilterAlf_divDrL__vVc+q\",\"divDrLAct\":\"FilterAlf_divDrLAct__9oLFa\"};","// extracted by mini-css-extract-plugin\nexport default {\"ulDrL\":\"DropListAlf_ulDrL__uJXav\",\"buttonFA\":\"DropListAlf_buttonFA__gwb2L\",\"firstChild\":\"DropListAlf_firstChild__q-p2J\",\"lastChild\":\"DropListAlf_lastChild__7sdw8\",\"divArrow\":\"DropListAlf_divArrow__0TC+-\"};","import css from \"./DropListAlf.module.css\";\nimport { setAlf } from \"../../redux/filterSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const DropListAlf = () => {\n    const disp = useDispatch();\n    const a = \"a\";\n    const n = \"n\";\n    const z = \"z\";\n\n    const setState = (l) => {\n        disp(setAlf(l));\n    };\n\n    return (\n        <ul className={css.ulDrL}>\n            <li>\n                <button className={[css.buttonFA, css.firstChild].join(\" \")} onClick={() => {setState(a)}}>\n                    <p>A to Z</p>\n                <div className={css.divArrow}></div>\n                </button>\n            </li>\n            <li>\n                <button className={css.buttonFA} onClick={() => {setState(z)}}>\n                    <p>Z to A</p>\n                <div className={css.divArrow}></div>\n                </button>\n            </li>\n            <li>\n                <button className={[css.buttonFA, css.lastChild].join(\" \")} onClick={() => {setState(n)}}>\n                    <p>Reset</p>\n                <div className={css.divArrow}></div>\n                </button>\n            </li>\n        </ul>\n    )\n};","import css from './FilterAlf.module.css';\nimport { DropListAlf } from '../DropListAlf/DropListAlf';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterAlf } from '../../redux/selectors';\n\nexport const FilterAlf = () => {\n    const allButtonFARef = useRef(null);\n    const divDrLRef = useRef(null);\n    const divArrowRef = useRef(null);\n    const [drListOn, setDrListOn] = useState(false);\n\n    const a = 'A to Z';\n    const z = 'Z to A';\n\n    const [filVal, setFilVal] = useState(a);\n\n    const selAlf = useSelector(selectFilterAlf);\n\n    useEffect(() => {\n        if (allButtonFARef.current) {\n            switch (selAlf) {\n                case \"a\":\n                    setFilVal(a);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                case \"z\":\n                    setFilVal(z);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                default:\n                    setFilVal(a);\n                    allButtonFARef.current.classList.remove(css.allButtonFAAct);\n\n    };\n        }\n    }, [selAlf]);\n\n    const remCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            divDrLRef.current.classList.remove(css.divDrLAct);\n            divArrowRef.current.classList.remove(css.divArrowAct);\n            window.removeEventListener('click', remCl);\n            setDrListOn(false);\n        }\n    };\n\n    const addCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            setTimeout(() => {\n                setDrListOn(true);\n                divDrLRef.current.classList.add(css.divDrLAct);\n                divArrowRef.current.classList.add(css.divArrowAct);\n                window.addEventListener('click', remCl);\n            }, 0)\n        }\n    };\n\n    const clickAllB = () => {\n        if (drListOn) {\n            remCl();\n        } else {\n            addCl();\n        }\n    };\n\n    return (\n        <div className={css.allFiltAlf}>\n            <div className={css.secAllDiv}>\n                <button ref={allButtonFARef} className={css.allButtonFA} onClick={clickAllB}>\n                    <p>{filVal}</p>\n                <div ref={divArrowRef} className={css.divArrow}></div>\n            </button>\n            <div ref={divDrLRef} className={css.divDrL}>\n                <DropListAlf/>\n            </div>\n            </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allFilters\":\"Filters_allFilters__6nONa\"};","import { Filter } from \"../Filter/Filter\";\nimport { FilterAlf } from \"../FilterAlf/FilterAlf\";\nimport css from './Filters.module.css';\n\nexport const Filters = () => {\n    return (\n        <div className={css.allFilters}>\n            <Filter />\n            <FilterAlf/>\n        </div>\n    )\n};","import { useDispatch } from \"react-redux\";\nimport { fetchDrugs, fetchPharmacies } from \"../../redux/opertions\";\nimport { PharmaciesList } from \"../PharmaciesList/PharmaciesList\";\nimport { DrugsList } from \"../DrugsList/DrugsList\";\nimport css from \"./Shop.module.css\";\nimport { Filters } from \"../Filters/Filters\";\n\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n\n    dispatch(fetchDrugs());\n    dispatch(fetchPharmacies());\n\n    const realScreenHeight = window.innerHeight;\n\n    return (\n        <>\n            <Filters/>\n            <div className={css.allShopDiv}>\n                <PharmaciesList realScreenHeight={realScreenHeight}/>\n                <DrugsList realScreenHeight={realScreenHeight}/>\n            </div>\n        </>\n    )\n};\n\nexport default Shop;"],"names":["Pharmacy","_ref","pharmacy","disp","useDispatch","actId","useSelector","selectFilterPharm","phormasyButtonRef","useRef","useEffect","current","realScreenWidth","window","innerWidth","phormasyButton","style","width","height","fontSize","id","classList","add","css","remove","_jsx","ref","className","type","onClick","setPhafm","children","name","PharmaciesList","realScreenHeight","pharmacies","selectPharmacies","allPharmaciesListDivRef","pharmaciesHlllRef","pharmaciesUlRef","allIdsPh","map","p","allPharmaciesListDiv","pharmaciesHlll","pharmaciesUl","concat","margin","padding","gap","includes","length","_jsxs","_Fragment","ph","Drug","drug","dispatch","favDr","selectFavoriteDrugs","shDr","selectDrugsForShop","isFav","inTrol","some","sd","addToBackedButRef","drugDivRef","divAddToBackedButRef","favoriteRef","infoDrugRef","drugLiRef","drugImgRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","addTrOrDel","d","delDrFShop","delDrSh","addDrFShop","addDrSh","drugLi","drugDiv","addToBackedBut","divAddToBackedBut","favorite","infoDrug","drugImg","drugsUl","document","querySelector","widthSize","clientWidth","paddingBottom","right","bottom","borderRadius","top","marginLeft","src","image","alt","price","dataWasAdded","DrugsList","allDrugs","selectDrugs","fevDrugsId","filter","selectFilter","selAlf","selectFilterAlf","allPharm","_useState","useState","_useState2","_slicedToArray","drugs","setDrugs","_useState3","_useState4","fevDrRend","setFevDrRend","_useState5","_useState6","notFvDrRend","setNotFvDrRend","fevDrugsIdRef","pasDrugs","_toConsumableArray","actPh","find","available","sort","a","b","localeCompare","contact","toLowerCase","allDrugsListDivRef","drugsUlRef","allDrugsListDiv","join","dr","Math","random","Filter","filterWithState","placeholderValue","setPlaceholderValue","value","placeholder","onChange","evt","preventDefault","filterValue","target","setFilter","DropListAlf","setState","l","setAlf","FilterAlf","allButtonFARef","divDrLRef","divArrowRef","drListOn","setDrListOn","filVal","setFilVal","remCl","removeEventListener","setTimeout","addEventListener","Filters","fetchDrugs","fetchPharmacies","innerHeight"],"sourceRoot":""}