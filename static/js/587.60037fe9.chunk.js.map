{"version":3,"file":"static/js/587.60037fe9.chunk.js","mappings":"6KACA,GAAgB,eAAiB,qCAAqC,aAAe,mCAAmC,OAAS,6BAA6B,cAAgB,oCAAoC,WAAa,iCAAiC,WAAa,kCCA7Q,GAAgB,UAAY,gCAAgC,YAAc,mC,6CCQ7DA,EAAe,SAAHC,GAA8B,IAAxBC,EAAgBD,EAAhBC,iBACrBC,GAAOC,EAAAA,EAAAA,MACPC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,EAAkBC,OAAOC,WAEzBC,GAAeC,EAAAA,EAAAA,QAAO,MAiE5B,OA3CAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAaG,QAAS,CACtB,IAAMC,EAAYJ,EAAaG,QAC/BC,EAAUC,MAAMC,OAASf,EAAmBA,EAAiB,IAAM,KACnEa,EAAUC,MAAME,OAASV,EAAkB,GAAKA,EAAkB,IAAM,EAAKA,EAAgB,GAAI,EAAI,KACrGO,EAAUC,MAAMG,QAAO,GAAAC,OAAMZ,EAAgB,GAAE,MAC/C,IAAMa,EAAeC,SAASC,iBAAiB,gBACzCC,EAAcF,SAASC,iBAAiB,eAC9C,GAAIF,GAAgBG,EAAa,CAC7B,IAAIC,EAAO,IAAOjB,EACdkB,EAAU,IACVlB,EAAkB,KAAOA,GAAmB,IAC5CiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,IACnDiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,IACnDiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,IACnDiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,IACnDiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,IACnDiB,EAAO,IAAMjB,EACNA,EAAkB,KAAOA,GAAmB,KACnDiB,EAAO,IAAMjB,EACbkB,EAAU,KACHlB,EAAkB,MACzBiB,EAAO,IAAMjB,EACbkB,EAAU,KAEd,IAAMC,EAAcnB,EAAkB,IAAOA,EAAkB,IAC/Da,EAAaO,SAAQ,SAAAC,GACjBA,EAAIb,MAAME,MAAQS,GAAe,KAAOF,GAAQ,KAChDI,EAAIb,MAAMc,SAAYH,EAAc,IAAOA,EAAc,MAAQ,KAAO,MACxEE,EAAIb,MAAMe,OAASJ,EAAc,GAAK,KACtCE,EAAIb,MAAMgB,YAAeL,EAAc,GAAMF,EAAOC,EAAU,IAClE,IACAF,EAAYI,SAAQ,SAAAK,GAChBA,EAAEjB,MAAMkB,WAAaP,EAAc,IAAM,IAC7C,GACJ,CACJ,CACJ,KAEIQ,EAAAA,EAAAA,MAAA,OAAKC,IAAKzB,EAAc0B,UAAWC,EAAAA,UAAcC,SAAA,EAC7CJ,EAAAA,EAAAA,MAAA,SAAOE,UAAW,CAACC,EAAAA,YAAiB,eAAeE,KAAK,KAAKD,SAAA,EACrDE,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,CAACC,EAAAA,WAAgB,cAAcE,KAAK,KAAKD,SAAC,UAC/DE,EAAAA,EAAAA,KAAA,SAAOJ,UAAWC,EAAAA,YAClBI,MAAOrC,EAASsC,KAChBC,SAAU,SAAAC,GAAC,OArEP,SAACA,GACb,IAAMC,EAAOD,EAAEE,OAAOL,MACtBvC,GAAK6C,EAAAA,EAAAA,IAAYF,GACrB,CAkE2BG,CAAQJ,EAAE,EACzBF,KAAK,OACLO,KAAK,OACLC,aAAa,KACbC,WAAS,EACTC,YAAa7C,EAAkB,IAAO,0BAA4B,aAEtE2B,EAAAA,EAAAA,MAAA,SAAOE,UAAW,CAACC,EAAAA,YAAiB,eAAeE,KAAK,KAAKD,SAAA,EACrDE,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,CAACC,EAAAA,WAAgB,cAAcE,KAAK,KAAKD,SAAC,WAC/DE,EAAAA,EAAAA,KAAA,SAAOJ,UAAWC,EAAAA,YAClBI,MAAOrC,EAASiD,MAChBV,SAAU,SAAAC,GAAC,OA3EP,SAACA,GACb,IAAMC,EAAOD,EAAEE,OAAOL,MACtBvC,GAAKoD,EAAAA,EAAAA,IAAaT,GACtB,CAwE2BU,CAAQX,EAAE,EACzBF,KAAK,QACLO,KAAK,QACLC,aAAa,KACbE,YAAa7C,EAAkB,IAAO,2BAA6B,cAEvE2B,EAAAA,EAAAA,MAAA,SAAOE,UAAW,CAACC,EAAAA,YAAiB,eAAeE,KAAK,KAAKD,SAAA,EACrDE,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,CAACC,EAAAA,WAAgB,cAAcE,KAAK,KAAKD,SAAC,WAC/DE,EAAAA,EAAAA,KAAA,SAAOJ,UAAWC,EAAAA,YAClBmB,QAAS,SAACZ,GACNA,EAAEE,OAAOL,MAAQG,EAAEE,OAAOL,MAAMgB,QAAQ,gBAAiB,GAC7D,EACAhB,MAAOrC,EAASsD,MAChBf,SAAU,SAAAC,GAAC,OAnFP,SAACA,GACb,IAAMC,EAAOD,EAAEE,OAAOL,MACtBvC,GAAKyD,EAAAA,EAAAA,IAAad,GACtB,CAgF2Be,CAAQhB,EAAE,EACzBF,KAAK,QACLO,KAAK,OACLC,aAAa,KACbE,YAAa7C,EAAkB,IAAO,2BAA6B,cAEvE2B,EAAAA,EAAAA,MAAA,SAAOE,UAAW,CAACC,EAAAA,YAAiB,eAAeE,KAAK,KAAKD,SAAA,EACrDE,EAAAA,EAAAA,KAAA,QAAMJ,UAAW,CAACC,EAAAA,WAAgB,cAAcE,KAAK,KAAKD,SAAC,aAC/DE,EAAAA,EAAAA,KAAA,SAAOJ,UAAWC,EAAAA,YAClBI,MAAOrC,EAASyD,QAChBlB,SAAU,SAAAC,GAAC,OAxFP,SAACA,GACb,IAAMC,EAAOD,EAAEE,OAAOL,MACtBvC,GAAK4D,EAAAA,EAAAA,IAAejB,GACxB,CAqF2BkB,CAAQnB,EAAE,EACzBF,KAAK,UACLO,KAAK,OACLC,aAAa,KACbE,YAAa7C,EAAkB,IAAO,6BAA+B,iBAIrF,EC/HA,GAAgB,SAAW,6BAA6B,KAAO,0BCA/D,GAAgB,QAAU,uBAAuB,QAAU,uBAAuB,YAAc,2BAA2B,WAAa,0BAA0B,QAAU,uBAAuB,YAAc,2BAA2B,SAAW,wBAAwB,UAAY,yBAAyB,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,0BAA0B,OAAS,sBAAsB,QAAU,uBAAuB,eAAiB,8BAA8B,kBAAoB,kCCM7hByD,EAAQ,SAAHhE,GAAkB,IAAZiE,EAAIjE,EAAJiE,KACdC,GAAW/D,EAAAA,EAAAA,MAGXgE,GAFQ9D,EAAAA,EAAAA,IAAY+D,EAAAA,IAENC,SAASJ,EAAKK,IAE5BC,GAAa5D,EAAAA,EAAAA,QAAO,MACpB6D,GAAa7D,EAAAA,EAAAA,QAAO,MACpB8D,GAAc9D,EAAAA,EAAAA,QAAO,MACrB+D,GAAc/D,EAAAA,EAAAA,QAAO,MACrBgE,GAAahE,EAAAA,EAAAA,QAAO,MACpBiE,GAAejE,EAAAA,EAAAA,QAAO,MACtBkE,GAAiBlE,EAAAA,EAAAA,QAAO,MACxBmE,GAAoBnE,EAAAA,EAAAA,QAAO,MAC3BoE,GAAuBpE,EAAAA,EAAAA,QAAO,MAC9BqE,GAAgBrE,EAAAA,EAAAA,QAAO,MACvBsE,GAAatE,EAAAA,EAAAA,QAAO,MACpBuE,GAAYvE,EAAAA,EAAAA,QAAO,MAUnBwE,EAAW,SAACb,GACVH,EALS,SAACG,GACdJ,GAASkB,EAAAA,EAAAA,IAAiBd,GAC9B,CAIQe,CAASf,GAVA,SAACA,GACdJ,GAASoB,EAAAA,EAAAA,IAAiBhB,GAC9B,CAUQiB,CAASjB,EAEjB,EAEMkB,EAAU,SAACC,GACbvB,GAASwB,EAAAA,EAAAA,IAAWD,GACxB,EAEME,EAAW,SAACF,EAAGG,GACjB,IAAMC,EAAO,CACTvB,GAAImB,EAAEnB,GACNwB,SAAUF,GAEd1B,GAAS6B,EAAAA,EAAAA,IAAgBF,GAC7B,EAkGA,OA/DAjF,EAAAA,EAAAA,YAAU,WACN,GAAI2D,EAAW1D,SAAW2D,EAAW3D,SAAW+D,EAAa/D,SACzD4D,EAAY5D,SAAW6D,EAAY7D,SAAW8D,EAAW9D,SACzDgE,EAAehE,SAAWiE,EAAkBjE,SAAWkE,EAAqBlE,SAC5EmE,EAAcnE,SAAWoE,EAAWpE,SAAWqE,EAAUrE,QAAS,CAClE,IAAMN,EAAkBC,OAAOC,WACzBuF,EAASzB,EAAW1D,QACpBoF,EAAUzB,EAAW3D,QACrBqF,EAAWzB,EAAY5D,QACvBsF,EAAWzB,EAAY7D,QACvBuF,EAAUzB,EAAW9D,QACrBwF,EAAYzB,EAAa/D,QACzByF,EAAczB,EAAehE,QAC7B0F,EAAiBzB,EAAkBjE,QACnC2F,EAAoBzB,EAAqBlE,QACzC4F,EAAazB,EAAcnE,QAC3B6F,EAAUzB,EAAWpE,QACrB8F,EAASzB,EAAUrE,QACnB+F,EAAUvF,SAASwF,cAAc,aACvC,GAAID,EAAS,CACT,IAAME,EAAYF,EAAQG,YAC1Bf,EAAOjF,MAAMC,OAAM,GAAAG,OAAM2F,EAAU,EAAC,MACpCV,EAAQrF,MAAME,MAAQ6F,EAAY,EAAI,KACtCV,EAAQrF,MAAMC,OAAS8F,EAAU,EAAI,IACzC,CACAb,EAAQlF,MAAMc,SAAWtB,EAAkB,IAAM,KACjD2F,EAASnF,MAAME,MAAQV,EAAkB,GAAK,KAC9C2F,EAASnF,MAAMC,OAAST,EAAkB,GAAK,KAC/C2F,EAASnF,MAAMiG,MAAQzG,EAAgB,GAAK,KAC5C2F,EAASnF,MAAMkG,IAAM1G,EAAkB,GAAK,KAC5C4F,EAASpF,MAAMmG,IAAM3G,EAAkB,IAAM,KAC7C6F,EAAQrF,MAAMe,OAASvB,EAAkB,IAAM,KAC/C8F,EAAUtF,MAAMoG,UAAY5G,EAAkB,GAAK,KACnD8F,EAAUtF,MAAMc,SAAWtB,EAAkB,GAAK,KAClD+F,EAAYvF,MAAMqG,aAAe7G,EAAkB,GAAK,KACxDkG,EAAW1F,MAAME,MAAQV,EAAkB,IAAMA,EAAkB,GAAK,KAAOA,EAAkB,GAAK,KACtGkG,EAAW1F,MAAMC,OAAST,EAAkB,GAAK,EAAI,KACrDkG,EAAW1F,MAAMsG,aAAe9G,EAAkB,GAAK,KACvDkG,EAAW1F,MAAMc,SAAWtB,EAAkB,GAAK,KAEnDmG,EAAQ3F,MAAMC,OAAST,EAAkB,GAAK,KAC9CoG,EAAO5F,MAAMC,OAAST,EAAkB,GAAK,KAC7CmG,EAAQ3F,MAAME,MAAOV,EAAkB,GAAK,KAC5CoG,EAAO5F,MAAME,MAAQV,EAAkB,GAAK,KAC5CmG,EAAQ3F,MAAMc,SAAWtB,EAAkB,GAAK,KAChDoG,EAAO5F,MAAMc,SAAWtB,EAAkB,GAAK,KAC/CmG,EAAQ3F,MAAMiG,MAAQzG,EAAkB,IAAMA,EAAkB,IAAM,KAAOA,EAAkB,IAAM,KACrGoG,EAAO5F,MAAMuG,KAAO/G,EAAkB,IAAMA,EAAkB,IAAM,KAAOA,EAAkB,IAAM,KAEnGgG,EAAexF,MAAME,MAAQV,EAAkB,GAAK,KACpDgG,EAAexF,MAAMC,OAAST,EAAkB,GAAK,KACrDgG,EAAexF,MAAMmG,IAAM3G,EAAgB,IAAM,KACjDgG,EAAexF,MAAMsG,aAAe9G,EAAgB,GAAK,KACzDgG,EAAexF,MAAMc,SAAWtB,EAAgB,GAAK,KACrDgG,EAAexF,MAAMG,QAAO,KAAAC,OAAQZ,EAAgB,IAAG,SAAAY,OAAQZ,EAAgB,GAAE,MACjFiG,EAAkBzF,MAAME,MAAQV,EAAkB,GAAK,KACnD4D,EACA+B,EAASqB,UAAUC,IAAInF,EAAAA,YAEvB6D,EAASqB,UAAUE,OAAOpF,EAAAA,WAElC,CACJ,KAEIG,EAAAA,EAAAA,KAAA,MAAIL,IAAKoC,EAAYnC,UAAWC,EAAAA,QAAYC,UACxCJ,EAAAA,EAAAA,MAAA,OAAKC,IAAKqC,EAAYpC,UAAWC,EAAAA,QAAYC,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASd,IAAKsC,EAAarC,UAAWC,EAAAA,YAAiBqF,QAAS,kBAAMvC,EAASlB,EAAKK,GAAG,KACpG9B,EAAAA,EAAAA,KAAA,OAAKL,IAAKwC,EAAYvC,UAAWC,EAAAA,QAAasF,IAAK1D,EAAK2D,MAAOC,IAAK5D,EAAKvB,QACrER,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAAA,YAAgBC,SAAA,EAC5BJ,EAAAA,EAAAA,MAAA,OAAKC,IAAKuC,EAAatC,UAAWC,EAAAA,SAAaC,SAAA,EACnDE,EAAAA,EAAAA,KAAA,KAAGL,IAAKyC,EAAcxC,UAAWC,EAAAA,UAAcC,UAACE,EAAAA,EAAAA,KAAA,KAAAF,SAAI2B,EAAKvB,UACzDR,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAAA,UAAcC,SAAA,EAACE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,YAAY2B,EAAK6D,MAAM,cACvD5F,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAAA,UAAcC,SAAA,EAACE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,wBAAuB,IAAE2B,EAAK8D,oBAE1D7F,EAAAA,EAAAA,MAAA,OAAKC,IAAK0C,EAAgBzC,UAAWC,EAAAA,YAAgBC,SAAA,EACjDJ,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAAA,SAAaC,SAAA,EACzBE,EAAAA,EAAAA,KAAA,UACIS,KAAK,SACLd,IAAK+C,EACL9C,UAAWC,EAAAA,OACXqF,QAAS,kBA1FtB,SAACjC,GACZ,IAAMuC,EAAUC,OAAOxC,EAAEK,UAAY,EACrC,GAAIkC,EAAU,EAAG,CACb,IAAME,EAAQC,OAAOH,GACrBrC,EAASF,EAAGyC,EAChB,MACI1C,EAAQC,EAEhB,CAkF2C2C,CAAOnE,EAAK,KAE/BzB,EAAAA,EAAAA,KAAA,SACIL,IAAK6C,EACL5C,UAAWC,EAAAA,WACXK,KAAK,WACLO,KAAK,OACLO,QAAS,SAACZ,GACNA,EAAEE,OAAOL,MAAQG,EAAEE,OAAOL,MAAMgB,QAAQ,UAAW,GACvD,EACAhB,MAAOwB,EAAK6B,SACZnD,SAAU,SAAAC,GAAC,OA5HhB,SAAC6C,EAAG4C,GACvBA,EAAIC,iBACJ,IAAM1C,EAAWyC,EAAIvF,OAAOL,MAC5BkD,EAASF,EAAGG,EAChB,CAwH2C2C,CAAetE,EAAMrB,EAAE,EACtC4F,OAAQ,SAAA5F,GAAC,OAvHrB,SAAC6C,EAAG4C,GAChB,IAAMxF,EAAOwF,EAAIvF,OAAOL,MACpBwF,OAAOpF,IAAS,GAChB2C,EAAQC,EAEhB,CAkHyCgD,CAAQxE,EAAMrB,EAAE,KAEjCJ,EAAAA,EAAAA,KAAA,UACIS,KAAK,SACLd,IAAK8C,EACL7C,UAAWC,EAAAA,QACXqF,QAAS,kBAtHrB,SAACjC,GACb,IAAMiD,EAAUT,OAAOxC,EAAEK,UAAY,EACrC,GAAI4C,EAAU,EAAG,CACb,IAAMC,EAAQR,OAAOO,GACrB/C,EAASF,EAAGkD,EAChB,MACInD,EAAQC,EAEhB,CA8G2CmD,CAAQ3E,EAAK,QAGpC/B,EAAAA,EAAAA,MAAA,UACIe,KAAK,SACLd,IAAK2C,EACL1C,UAAWC,EAAAA,eACXqF,QAAS,kBAAMlC,EAAQvB,EAAK,EAAC3B,SAAA,EACzCE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,YACNE,EAAAA,EAAAA,KAAA,OAAKL,IAAK4C,EAAsB3C,UAAWC,EAAAA,iCAO3D,ECnMawG,EAAa,SAAH7I,GAAqC,IAAhCC,EAAgBD,EAAhBC,iBAAkB6I,EAAO9I,EAAP8I,QACpCC,GAAU1I,EAAAA,EAAAA,IAAY2I,EAAAA,IAEtBC,GAActI,EAAAA,EAAAA,QAAO,MACrBuI,GAAUvI,EAAAA,EAAAA,QAAO,MACjBwI,GAAWxI,EAAAA,EAAAA,QAAO,MAmBxB,OAjBAC,EAAAA,EAAAA,YAAU,WACN,GAAIqI,EAAYpI,QAAS,CACrB,IAAMN,EAAkBC,OAAOC,WACzB2I,EAAWH,EAAYpI,QAI7B,GAHAuI,EAASrI,MAAMC,OAASf,EAAmBA,EAAiB,IAAM,KAClEmJ,EAASrI,MAAME,OAASV,EAAkB,GAAKA,EAAkB,IAAM,EAAKA,EAAgB,GAAI,EAAI,KACpG6I,EAASrI,MAAMG,QAAO,GAAAC,OAAMZ,EAAkB,GAAE,MAC5C2I,EAAQrI,QACKqI,EAAQrI,QAChBE,MAAMmG,IAAM3G,EAAkB,GAAK,KAE5C,GAAI4I,EAAStI,QACKsI,EAAStI,QACjBE,MAAMc,SAAWtB,EAAkB,GAAK,IAEtD,CACJ,KAEIiC,EAAAA,EAAAA,KAAA,OAAKL,IAAK8G,EAAa7G,UAAW,CAACC,EAAAA,SAAc,YAAYE,KAAK,KAAKD,SAClEyG,EAAQM,OAAS,GAClB7G,EAAAA,EAAAA,KAAA,MAAIL,IAAK+G,EAAS9G,UAAW,CAACC,EAAAA,KAAU,QAAQE,KAAK,KAAKD,SACrDyG,EAAQO,KAAI,SAAA7D,GAAC,OAAIjD,EAAAA,EAAAA,KAACwB,EAAK,CAAYC,KAAMwB,GAAZA,EAAEnB,GAAc,OAG1C9B,EAAAA,EAAAA,KAAA,KAAGL,IAAKgH,EAAS7G,SAAEwG,KAIvC,E,6CCzCA,SAASS,EAAE3G,GAAG,IAAI4G,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiB9G,GAAG,iBAAiBA,EAAE8G,GAAG9G,OAAO,GAAG,iBAAiBA,EAAE,GAAG+G,MAAMC,QAAQhH,GAAG,CAAC,IAAIiH,EAAEjH,EAAEyG,OAAO,IAAIG,EAAE,EAAEA,EAAEK,EAAEL,IAAI5G,EAAE4G,KAAKC,EAAEF,EAAE3G,EAAE4G,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,EAAE,MAAM,IAAIA,KAAK7G,EAAEA,EAAE6G,KAAKC,IAAIA,GAAG,KAAKA,GAAGD,GAAG,OAAOC,CAAC,CAAgI,MAAxH,WAAgB,IAAI,IAAI9G,EAAE4G,EAAEC,EAAE,EAAEC,EAAE,GAAGG,EAAEC,UAAUT,OAAOI,EAAEI,EAAEJ,KAAK7G,EAAEkH,UAAUL,MAAMD,EAAED,EAAE3G,MAAM8G,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,E,wthBCY/W,IAwHA,GAxHqB,WACjB,IAAMxJ,GAAOC,EAAAA,EAAAA,MAEPF,EAAmBO,OAAOuJ,YAC1BxJ,EAAkBC,OAAOC,WAEzBuJ,GAAU3J,EAAAA,EAAAA,IAAY2I,EAAAA,IACtB5I,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7B2J,GAA8BC,EAAAA,EAAAA,UAAS,yCAAwCC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxEnB,EAAOqB,EAAA,GAAEE,EAAUF,EAAA,GAEtBG,EAAW,EACf,GAAIN,EAAQX,OAAS,EAAG,CACpB,IAAIkB,EAAQ,EACZP,EAAQrI,SAAQ,SAAA6I,GACZD,GAAStC,OAAOuC,EAAG1C,MAAMrE,QAAQ,KAAM,MAAQwE,OAAOuC,EAAG1E,SAC7D,IACAwE,EAAWC,EAAME,QAAQ,GAAGhH,QAAQ,MAAO,IAC/C,CAEA,IAAMiH,GAAoB/J,EAAAA,EAAAA,QAAO,MAC3BgK,GAAkBhK,EAAAA,EAAAA,QAAO,MACzBiK,GAAiBjK,EAAAA,EAAAA,QAAO,MACxBkK,GAAmBlK,EAAAA,EAAAA,QAAO,MAC1BmK,GAAgBnK,EAAAA,EAAAA,QAAO,MACvBoK,GAAgBpK,EAAAA,EAAAA,QAAO,MACvBqK,GAAYrK,EAAAA,EAAAA,QAAO,MA+DzB,OA9BAC,EAAAA,EAAAA,YAAU,WACN,GAAI8J,EAAkB7J,SAAU8J,EAAgB9J,SAAWgK,EAAiBhK,SACxEkK,EAAclK,SAAWmK,EAAUnK,SAAW+J,EAAe/J,SAAWiK,EAAcjK,QAAS,CAC/F,IAAMoK,EAAiBP,EAAkB7J,QACnCqK,EAAeP,EAAgB9J,QAC/BsK,EAAcP,EAAe/J,QAC7BuK,EAAgBP,EAAiBhK,QACjCwK,EAAaP,EAAcjK,QAC3ByK,EAAaP,EAAclK,QAC3B0K,EAASP,EAAUnK,QACzBoK,EAAelK,MAAMmG,IAAM3G,EAAkB,GAAK,KAClD2K,EAAanK,MAAMmG,IAAM3G,EAAkB,GAAK,KAChD2K,EAAanK,MAAMyK,WAAajL,EAAkB,IAAM,KACxD4K,EAAYpK,MAAME,MAAQV,EAAkB,KAAO,KACnD4K,EAAYpK,MAAMsG,aAAe9G,EAAgB,MAAQ,KACzD4K,EAAYpK,MAAMc,SAAWtB,EAAgB,OAAS,KACtD4K,EAAYpK,MAAMmG,IAAM3G,EAAgB,MAAQ,KAChD6K,EAAcrK,MAAME,MAAQV,EAAkB,KAAO,KACrD6K,EAAcrK,MAAMsG,aAAe9G,EAAgB,MAAQ,KAC3D6K,EAAcrK,MAAMc,SAAWtB,EAAgB,OAAS,KACxD6K,EAAcrK,MAAMmG,IAAM3G,EAAkB,MAAQ,KACpD8K,EAAWtK,MAAME,MAAQV,EAAkB,MAAQ,KACnD8K,EAAWtK,MAAMC,OAAST,EAAkB,MAAQ,KACpD+K,EAAWvK,MAAME,MAAQV,EAAkB,MAAQ,KACnD+K,EAAWvK,MAAMC,OAAST,EAAkB,MAAQ,KACpDgL,EAAOxK,MAAMc,SAAWtB,EAAgB,OAAS,IAErD,CACJ,KAGIiC,EAAAA,EAAAA,KAAAiJ,EAAAA,SAAA,CAAAnJ,UACIJ,EAAAA,EAAAA,MAAA,QAAME,UAAWC,EAAAA,QAAaqJ,SA3DpB,SAAC9I,GACfA,EAAE0F,iBACF,IAAIqD,GAAQ,EACZ,IAAK,IAAMC,KAAOxL,EAAU,CACxB,GAA6B,KAAzBA,EAASwL,GAAKC,OAAe,CAC7BF,GAAQ,EACR,KACJ,CACIA,GAAQ,CAEhB,CACA,GAAKA,EAEE,GAAI3B,EAAQX,OAAS,EACxByC,EAAAA,OAAYtJ,EAAAA,EAAAA,KAAA,KAAGzB,MAAO,CAAEc,SAAS,QAASS,SAAC,+CACxC,CACH,IAAMyJ,EAAY,CAClBC,KAAM5L,EACN6L,MAAOjC,GAEP9J,GAAKgM,EAAAA,EAAAA,IAAWH,IAChB1B,EAAW,GAADlJ,OAAIf,EAASsC,KAAI,gEAC3BxC,GAAKiM,EAAAA,EAAAA,OACLjM,GAAKkM,EAAAA,EAAAA,MACT,MAZIN,EAAAA,OAAYtJ,EAAAA,EAAAA,KAAA,KAAGzB,MAAO,CAAEc,SAAS,QAASS,SAAC,wCAanD,EAkC0DA,SAAA,EAC9CJ,EAAAA,EAAAA,MAAA,OAAKC,IAAKuI,EAAmBtI,UAAWC,EAAAA,eAAmBC,SAAA,EACvDE,EAAAA,EAAAA,KAACzC,EAAY,CAACE,iBAAkBA,KAChCuC,EAAAA,EAAAA,KAACqG,EAAU,CACP5I,iBAAkBA,EAClB6I,QAASA,QAGjB5G,EAAAA,EAAAA,MAAA,OAAKC,IAAKwI,EAAiBvI,UAAWC,EAAAA,aAAiBC,SAAA,EACnDE,EAAAA,EAAAA,KAAA,KAAGL,IAAK6I,EAAW5I,UAAWC,EAAAA,OAAWC,UAACJ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,gBAAcgI,EAAS,gBACpEpI,EAAAA,EAAAA,MAAA,UACIC,IAAKyI,EACLxI,UAAWC,EAAAA,cACXqF,QA5EF,WACdxH,GAAKkM,EAAAA,EAAAA,MACT,EA2EoBnJ,KAAK,SAAQX,SAAA,EACjBE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,gBACHE,EAAAA,EAAAA,KAAA,OAAKL,IAAK2I,EAAe1I,UAAWC,EAAAA,iBAExCH,EAAAA,EAAAA,MAAA,UAAQC,IAAK0I,EAAkBzI,UAAWC,EAAAA,cAAmBY,KAAK,SAAQX,SAAA,EACtEE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,YACHE,EAAAA,EAAAA,KAAA,OAAKL,IAAK4I,EAAe3I,UAAWC,EAAAA,oBAG5CG,EAAAA,EAAAA,KAAC6J,GAAc,QAI3B,C","sources":["webpack://pharmacy-shop/./src/components/ShoppingCart/ShoppingCart.module.css?81ff","webpack://pharmacy-shop/./src/components/DataUserForm/DataUserForm.module.css?6158","components/DataUserForm/DataUserForm.jsx","webpack://pharmacy-shop/./src/components/SavedDrugs/SavedDrugs.module.css?a7d3","webpack://pharmacy-shop/./src/components/SevDr/SevDr.module.css?5ae1","components/SevDr/SevDr.jsx","components/SavedDrugs/SavedDrugs.jsx","../node_modules/clsx/dist/clsx.mjs","components/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divDataUsSavDr\":\"ShoppingCart_divDataUsSavDr__0XJg3\",\"divTotButShC\":\"ShoppingCart_divTotButShC__qjrGa\",\"totShC\":\"ShoppingCart_totShC__R2hrs\",\"buttonShCForm\":\"ShoppingCart_buttonShCForm__Kx64Q\",\"divSvgBShC\":\"ShoppingCart_divSvgBShC__4idZs\",\"divSvgBDel\":\"ShoppingCart_divSvgBDel__mePP1\"};","// extracted by mini-css-extract-plugin\nexport default {\"allDivDUF\":\"DataUserForm_allDivDUF__Km4j8\",\"inputDUForm\":\"DataUserForm_inputDUForm__r8cbI\"};","import css from \"./DataUserForm.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserName,\n    setUserEmail,\n    setUserPhone,\n    setUserAddress } from \"../../redux/drugsLSSlice\";\nimport { selectDataUser } from \"../../redux/selectors\";\n\nexport const DataUserForm = ({ realScreenHeight }) => {\n    const disp = useDispatch();\n    const dataUser = useSelector(selectDataUser);\n\n    const realScreenWidth = window.innerWidth;\n\n    const allDivDUFRef = useRef(null);\n\n    const forInpN = (e) => {\n        const inpV = e.target.value;\n        disp(setUserName(inpV));\n    };\n\n    const forInpE = (e) => {\n        const inpV = e.target.value;\n        disp(setUserEmail(inpV));\n    };\n\n    const forInpP = (e) => {\n        const inpV = e.target.value;\n        disp(setUserPhone(inpV));\n    };\n\n    const forInpA = (e) => {\n        const inpV = e.target.value;\n        disp(setUserAddress(inpV));\n    };\n\n    useEffect(() => {\n        if (allDivDUFRef.current) {\n            const allDivDUF = allDivDUFRef.current;\n            allDivDUF.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivDUF.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivDUF.style.padding = `${realScreenWidth/50}px`;\n            const labelDUForms = document.querySelectorAll('.labelDUForm');\n            const pRegDUForms = document.querySelectorAll('.pRegDUForm');\n            if (labelDUForms && pRegDUForms) {\n                let coef = 1000 / realScreenWidth;\n                let secCoef = 1.3;\n                if (realScreenWidth < 900 && realScreenWidth >= 800) {\n                    coef = 900 / realScreenWidth;\n                } else if (realScreenWidth < 800 && realScreenWidth >= 700) {\n                    coef = 800 / realScreenWidth;\n                } else if (realScreenWidth < 700 && realScreenWidth >= 600) {\n                    coef = 700 / realScreenWidth;\n                } else if (realScreenWidth < 600 && realScreenWidth >= 500) {\n                    coef = 600 / realScreenWidth;\n                } else if (realScreenWidth < 500 && realScreenWidth >= 400) {\n                    coef = 500 / realScreenWidth;\n                } else if (realScreenWidth < 400 && realScreenWidth >= 350) {\n                    coef = 450 / realScreenWidth;\n                } else if (realScreenWidth < 350 && realScreenWidth >= 310) {\n                    coef = 390 / realScreenWidth;\n                    secCoef = 1.6;\n                } else if (realScreenWidth < 310) {\n                    coef = 380 / realScreenWidth;\n                    secCoef = 1.7;\n                };\n                const screenWidth = realScreenWidth < 1000 ? realScreenWidth : 1000;\n                labelDUForms.forEach(lab => {\n                    lab.style.width = screenWidth / (2.86 * coef) + 'px';\n                    lab.style.fontSize = (screenWidth > 500) ? screenWidth / 55.56 + 'px' : '9px';\n                    lab.style.margin = screenWidth / 65 + 'px';\n                    lab.style.marginRight = (screenWidth / 25) * coef * secCoef + 'px';\n                });\n                pRegDUForms.forEach(p => {\n                    p.style.marginLeft = screenWidth / 100 + 'px';\n                });\n            }\n        }\n    });\n    return (\n        <div ref={allDivDUFRef} className={css.allDivDUF}>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Name</span>\n                <input className={css.inputDUForm} \n                value={dataUser.name}\n                onChange={e => forInpN(e)}\n                name='name'\n                type=\"text\"\n                autoComplete=\"on\"\n                autoFocus\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your name\"):(\"Name\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Email</span>\n                <input className={css.inputDUForm} \n                value={dataUser.email}\n                onChange={e => forInpE(e)}\n                name='email'\n                type=\"email\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your email\"):(\"Email\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Phone</span>\n                <input className={css.inputDUForm} \n                onInput={(e) => {\n                    e.target.value = e.target.value.replace(/[^0-9()+\\\\-]/g, '');\n                }}\n                value={dataUser.phone}\n                onChange={e => forInpP(e)}\n                name='phone'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your phone\"):(\"Phone\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Address</span>\n                <input className={css.inputDUForm} \n                value={dataUser.address}\n                onChange={e => forInpA(e)}\n                name='address'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your address\"):(\"Address\")} />\n            </label>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDivSD\":\"SavedDrugs_allDivSD__a3Zzi\",\"ulSD\":\"SavedDrugs_ulSD__4PaWR\"};","// extracted by mini-css-extract-plugin\nexport default {\"liSevDr\":\"SevDr_liSevDr__D-qwE\",\"drugDiv\":\"SevDr_drugDiv__42Fns\",\"favoriteBut\":\"SevDr_favoriteBut__n+Pj3\",\"isFavorite\":\"SevDr_isFavorite__2m8ZQ\",\"drugImg\":\"SevDr_drugImg__IeUJk\",\"infInpSevDr\":\"SevDr_infInpSevDr__9j43G\",\"infoDrug\":\"SevDr_infoDrug__XBIuj\",\"pInfoDrug\":\"SevDr_pInfoDrug__X-BRH\",\"inpButSevDr\":\"SevDr_inpButSevDr__oxgZk\",\"divInput\":\"SevDr_divInput__mxxip\",\"inputSavDr\":\"SevDr_inputSavDr__ox410\",\"minBut\":\"SevDr_minBut__-kx+N\",\"plusBut\":\"SevDr_plusBut__O7nIm\",\"addToBackedBut\":\"SevDr_addToBackedBut__q56jp\",\"divDelToBackedBut\":\"SevDr_divDelToBackedBut__FVUc0\"};","import css from \"./SevDr.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs, delDrFShop, setQuantityShop } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs } from \"../../redux/selectors\";\n\n\nexport const SevDr = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    \n    const isFav = favDr.includes(drug.id);\n\n    const liSevDrRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugImgRef = useRef(null);\n    const pNumeDrugRef = useRef(null);\n    const inpButSevDrRef = useRef(null);\n    const addToBackedButRef = useRef(null);\n    const divDelToBackedButRef = useRef(null);\n    const inputSavDrRef = useRef(null);\n    const plusButRef = useRef(null); \n    const minButRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    const delDrSh = (d) => {\n        dispatch(delDrFShop(d));\n    };\n\n    const setStInp = (d, inpValue) => {\n        const data = {\n            id: d.id,\n            quantity: inpValue\n        };\n        dispatch(setQuantityShop(data));\n    };\n\n    const updateValueInp = (d, evt) => {\n        evt.preventDefault();\n        const inpValue = evt.target.value;\n        setStInp(d, inpValue);\n    };\n\n    const forBlur = (d, evt) => {\n        const inpV = evt.target.value;\n        if (Number(inpV) <= 0) {\n            delDrSh(d);\n        };\n    };\n\n    const forPlus = (d) => {\n        const newValP = Number(d.quantity) + 1;\n        if (newValP > 0) {\n            const newVP = String(newValP);\n            setStInp(d, newVP);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    const forMin = (d) => {\n        const newValM = Number(d.quantity) - 1;\n        if (newValM > 0) {\n            const newVM = String(newValM);\n            setStInp(d, newVM);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    useEffect(() => {\n        if (liSevDrRef.current && drugDivRef.current && pNumeDrugRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugImgRef.current &&\n            inpButSevDrRef.current && addToBackedButRef.current && divDelToBackedButRef.current &&\n            inputSavDrRef.current && plusButRef.current && minButRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const drugLi = liSevDrRef.current;\n            const drugDiv = drugDivRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            const pNumeDrug = pNumeDrugRef.current;\n            const inpButSevDr = inpButSevDrRef.current;\n            const addToBackedBut = addToBackedButRef.current;\n            const divDelToBackedBut = divDelToBackedButRef.current;\n            const inputSavDr = inputSavDrRef.current;\n            const plusBut = plusButRef.current;\n            const minBut = minButRef.current;\n            const drugsUl = document.querySelector('.allDivSD');\n            if (drugsUl) {\n                const widthSize = drugsUl.clientWidth;\n                drugLi.style.height = `${widthSize/2}px`;\n                drugImg.style.width = widthSize / 2 + 'px';\n                drugImg.style.height = widthSize/4 + 'px';\n            };\n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 100 + 'px';\n            pNumeDrug.style.marginTop = realScreenWidth / 25 + 'px';\n            pNumeDrug.style.fontSize = realScreenWidth / 50 + 'px';\n            inpButSevDr.style.marginBottom = realScreenWidth / 50 + 'px';\n            inputSavDr.style.width = realScreenWidth > 450 ? realScreenWidth / 24 + 'px' : realScreenWidth / 50 + 'px';\n            inputSavDr.style.height = realScreenWidth / 24 - 2 + 'px';\n            inputSavDr.style.borderRadius = realScreenWidth / 72 + 'px';\n            inputSavDr.style.fontSize = realScreenWidth / 60 + 'px';\n\n            plusBut.style.height = realScreenWidth / 24 + 'px';\n            minBut.style.height = realScreenWidth / 24 + 'px';\n            plusBut.style.width =realScreenWidth / 50 + 'px';\n            minBut.style.width = realScreenWidth / 50 + 'px';\n            plusBut.style.fontSize = realScreenWidth / 40 + 'px';\n            minBut.style.fontSize = realScreenWidth / 40 + 'px';\n            plusBut.style.right = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n            minBut.style.left = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n\n            addToBackedBut.style.width = realScreenWidth / 13 + 'px';\n            addToBackedBut.style.height = realScreenWidth / 24 + 'px';\n            addToBackedBut.style.gap = realScreenWidth/288 + 'px';\n            addToBackedBut.style.borderRadius = realScreenWidth/72 + 'px';\n            addToBackedBut.style.fontSize = realScreenWidth/80 + 'px';\n            addToBackedBut.style.padding = `0 ${realScreenWidth/144}px 0 ${realScreenWidth/96}px`;\n            divDelToBackedBut.style.width = realScreenWidth / 48 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n            };\n        }\n    });\n    return (\n        <li ref={liSevDrRef} className={css.liSevDr}>\n            <div ref={drugDivRef} className={css.drugDiv}>\n            <button type=\"button\" ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n                <div className={css.infInpSevDr}>\n                    <div ref={infoDrugRef} className={css.infoDrug}>\n                <p ref={pNumeDrugRef} className={css.pNumeDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n                </div>\n                    <div ref={inpButSevDrRef} className={css.inpButSevDr}>\n                        <div className={css.divInput}>\n                            <button\n                                type=\"button\"\n                                ref={minButRef}\n                                className={css.minBut}\n                                onClick={() => forMin(drug)}\n                            ></button>\n                            <input\n                                ref={inputSavDrRef}\n                                className={css.inputSavDr}\n                                name='quantity'\n                                type=\"text\"\n                                onInput={(e) => {\n                                    e.target.value = e.target.value.replace(/[^0-9]/g, '');\n                                }}\n                                value={drug.quantity}\n                                onChange={e => updateValueInp(drug, e)}\n                                onBlur={e => forBlur(drug, e)}\n                            />\n                            <button\n                                type=\"button\"\n                                ref={plusButRef}\n                                className={css.plusBut}\n                                onClick={() => forPlus(drug)}\n                            ></button>\n                        </div>\n                        <button\n                            type=\"button\"\n                            ref={addToBackedButRef}\n                            className={css.addToBackedBut}\n                            onClick={() => delDrSh(drug)}>\n                <span>Delete</span>\n                <div ref={divDelToBackedButRef} className={css.divDelToBackedBut}></div>\n            </button>\n                </div>\n            </div>\n            </div>\n        </li>\n    )\n};","import { useEffect, useRef } from \"react\";\nimport css from \"./SavedDrugs.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectDrugsForShop } from \"../../redux/selectors\";\nimport { SevDr } from \"../SevDr/SevDr\";\n\nexport const SavedDrugs = ({realScreenHeight, message}) => {\n    const drugsSh = useSelector(selectDrugsForShop);\n\n    const allDivSDRef = useRef(null);\n    const ulSDRef = useRef(null);\n    const nothPRef = useRef(null);\n\n    useEffect(() => {\n        if (allDivSDRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const allDivSD = allDivSDRef.current;\n            allDivSD.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivSD.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivSD.style.padding = `${realScreenWidth / 50}px`;\n            if (ulSDRef.current) {\n                const ulSD = ulSDRef.current;\n                ulSD.style.gap = realScreenWidth / 50 + 'px';\n            };\n            if (nothPRef.current) { \n                const nothP = nothPRef.current;\n                nothP.style.fontSize = realScreenWidth / 42 + 'px';\n            };\n        }\n    });\n    return (\n        <div ref={allDivSDRef} className={[css.allDivSD, 'allDivSD'].join(' ')}>\n            {drugsSh.length > 0 ? (\n            <ul ref={ulSDRef} className={[css.ulSD, 'ulSD'].join(' ')}>\n                {drugsSh.map(d => <SevDr key={d.id} drug={d}/>)}\n            </ul>\n            ) : (\n                    <p ref={nothPRef}>{message}</p>\n            )}\n        </div>\n    )\n};","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import css from \"./ShoppingCart.module.css\";\nimport { DataUserForm } from \"../DataUserForm/DataUserForm\";\nimport { SavedDrugs } from \"../SavedDrugs/SavedDrugs\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDrugsForShop, selectDataUser } from \"../../redux/selectors\";\nimport { delAllDrSh, delUserData } from \"../../redux/drugsLSSlice\";\nimport { orderDrugs } from \"../../redux/opertions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst ShoppingCart = () => {\n    const disp = useDispatch();\n\n    const realScreenHeight = window.innerHeight;\n    const realScreenWidth = window.innerWidth;\n\n    const drForSh = useSelector(selectDrugsForShop);\n    const dataUser = useSelector(selectDataUser);\n\n    const [message, setMessage] = useState(\"You haven't selected any products yet\");\n\n    let allPrice = 0;\n    if (drForSh.length > 0) {\n        let allPr = 0;\n        drForSh.forEach(dr => {\n            allPr += Number(dr.price.replace(/,/g, \".\")) * Number(dr.quantity);\n        });\n        allPrice = allPr.toFixed(2).replace(/\\./g, \",\")\n    };\n\n    const divDataUsSavDrRef = useRef(null);\n    const divTotButShCRef = useRef(null);\n    const buttonShDelRef = useRef(null);\n    const buttonShCFormRef = useRef(null);\n    const divSvgBDelRef = useRef(null);\n    const divSvgBShCRef = useRef(null);\n    const totShCRef = useRef(null);\n\n    const forAllDel = () => {\n        disp(delAllDrSh());\n    };\n\n    const forSubmit = (e) => {\n        e.preventDefault();\n        let allUD = false;\n        for (const key in dataUser) {\n            if (dataUser[key].trim() === '') {\n                allUD = false\n                break\n            } else {\n                allUD = true\n            };\n        };\n        if (!allUD) {\n            toast.error(<p style={{ fontSize: `14px`}}>Please fill in all customer details</p>)\n        } else if (drForSh.length < 1) { \n            toast.error(<p style={{ fontSize: `14px`}}>You haven't selected any products yet</p>)\n        } else {\n            const orderData = {\n            user: dataUser,\n            order: drForSh\n        };\n            disp(orderDrugs(orderData));\n            setMessage(`${dataUser.name}, thank you for your order. Expect a call from our manager.`)\n            disp(delUserData());\n            disp(delAllDrSh());\n        }\n    };\n\n    useEffect(() => {\n        if (divDataUsSavDrRef.current&& divTotButShCRef.current && buttonShCFormRef.current &&\n            divSvgBShCRef.current && totShCRef.current && buttonShDelRef.current && divSvgBDelRef.current) {\n            const divDataUsSavDr = divDataUsSavDrRef.current;\n            const divTotButShC = divTotButShCRef.current;\n            const buttonShDel = buttonShDelRef.current;\n            const buttonShCForm = buttonShCFormRef.current;\n            const divSvgBDel = divSvgBDelRef.current;\n            const divSvgBShC = divSvgBShCRef.current;\n            const totShC = totShCRef.current;\n            divDataUsSavDr.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.paddingTop = realScreenWidth / 100 + 'px';\n            buttonShDel.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShDel.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShDel.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShDel.style.gap = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShCForm.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShCForm.style.gap = realScreenWidth / 66.67 + 'px';\n            divSvgBDel.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBDel.style.height = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.height = realScreenWidth / 33.33 + 'px';\n            totShC.style.fontSize = realScreenWidth/41.667 + 'px';\n\n        }\n    });\n\n    return (\n        <>\n            <form className={css.formShC} onSubmit={forSubmit}>\n                <div ref={divDataUsSavDrRef} className={css.divDataUsSavDr}>\n                    <DataUserForm realScreenHeight={realScreenHeight}/>\n                    <SavedDrugs\n                        realScreenHeight={realScreenHeight}\n                        message={message}\n                    />\n                </div>\n                <div ref={divTotButShCRef} className={css.divTotButShC}>\n                    <p ref={totShCRef} className={css.totShC}><b>Total price: {allPrice} &#8372;</b></p>\n                    <button\n                        ref={buttonShDelRef}\n                        className={css.buttonShCForm}\n                        onClick={forAllDel}\n                        type=\"button\">\n                    <p>Delete All</p>\n                    <div ref={divSvgBDelRef} className={css.divSvgBDel}></div>\n                </button>\n                <button ref={buttonShCFormRef} className={css.buttonShCForm} type=\"submit\">\n                    <p>To buy</p>\n                    <div ref={divSvgBShCRef} className={css.divSvgBShC}></div>\n                </button>\n                </div>\n            <ToastContainer />\n            </form>\n        </>\n    )\n};\n\nexport default ShoppingCart;"],"names":["DataUserForm","_ref","realScreenHeight","disp","useDispatch","dataUser","useSelector","selectDataUser","realScreenWidth","window","innerWidth","allDivDUFRef","useRef","useEffect","current","allDivDUF","style","height","width","padding","concat","labelDUForms","document","querySelectorAll","pRegDUForms","coef","secCoef","screenWidth","forEach","lab","fontSize","margin","marginRight","p","marginLeft","_jsxs","ref","className","css","children","join","_jsx","value","name","onChange","e","inpV","target","setUserName","forInpN","type","autoComplete","autoFocus","placeholder","email","setUserEmail","forInpE","onInput","replace","phone","setUserPhone","forInpP","address","setUserAddress","forInpA","SevDr","drug","dispatch","isFav","selectFavoriteDrugs","includes","id","liSevDrRef","drugDivRef","favoriteRef","infoDrugRef","drugImgRef","pNumeDrugRef","inpButSevDrRef","addToBackedButRef","divDelToBackedButRef","inputSavDrRef","plusButRef","minButRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","delDrSh","d","delDrFShop","setStInp","inpValue","data","quantity","setQuantityShop","drugLi","drugDiv","favorite","infoDrug","drugImg","pNumeDrug","inpButSevDr","addToBackedBut","divDelToBackedBut","inputSavDr","plusBut","minBut","drugsUl","querySelector","widthSize","clientWidth","right","top","gap","marginTop","marginBottom","borderRadius","left","classList","add","remove","onClick","src","image","alt","price","dataWasAdded","newValM","Number","newVM","String","forMin","evt","preventDefault","updateValueInp","onBlur","forBlur","newValP","newVP","forPlus","SavedDrugs","message","drugsSh","selectDrugsForShop","allDivSDRef","ulSDRef","nothPRef","allDivSD","length","map","r","t","f","n","Array","isArray","o","arguments","innerHeight","drForSh","_useState","useState","_useState2","_slicedToArray","setMessage","allPrice","allPr","dr","toFixed","divDataUsSavDrRef","divTotButShCRef","buttonShDelRef","buttonShCFormRef","divSvgBDelRef","divSvgBShCRef","totShCRef","divDataUsSavDr","divTotButShC","buttonShDel","buttonShCForm","divSvgBDel","divSvgBShC","totShC","paddingTop","_Fragment","onSubmit","allUD","key","trim","toast","orderData","user","order","orderDrugs","delUserData","delAllDrSh","ToastContainer"],"sourceRoot":""}