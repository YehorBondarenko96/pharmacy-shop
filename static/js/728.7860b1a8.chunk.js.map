{"version":3,"file":"static/js/728.7860b1a8.chunk.js","mappings":"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","sources":["webpack://pharmacy-shop/./src/components/ShoppingCart/ShoppingCart.module.css?81ff","webpack://pharmacy-shop/./src/components/DataUserForm/DataUserForm.module.css?6158","components/DataUserForm/DataUserForm.jsx","webpack://pharmacy-shop/./src/components/SavedDrugs/SavedDrugs.module.css?a7d3","webpack://pharmacy-shop/./src/components/SevDr/SevDr.module.css?5ae1","components/SevDr/SevDr.jsx","components/SavedDrugs/SavedDrugs.jsx","components/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divDataUsSavDr\":\"ShoppingCart_divDataUsSavDr__0XJg3\",\"divTotButShC\":\"ShoppingCart_divTotButShC__qjrGa\",\"totShC\":\"ShoppingCart_totShC__R2hrs\",\"buttonShCForm\":\"ShoppingCart_buttonShCForm__Kx64Q\",\"divSvgBShC\":\"ShoppingCart_divSvgBShC__4idZs\",\"divSvgBDel\":\"ShoppingCart_divSvgBDel__mePP1\"};","// extracted by mini-css-extract-plugin\nexport default {\"allDivDUF\":\"DataUserForm_allDivDUF__Km4j8\",\"inputDUForm\":\"DataUserForm_inputDUForm__r8cbI\"};","import css from \"./DataUserForm.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserName,\n    setUserEmail,\n    setUserPhone,\n    setUserAddress } from \"../../redux/drugsLSSlice\";\nimport { selectDataUser } from \"../../redux/selectors\";\n\nexport const DataUserForm = ({ realScreenHeight }) => {\n    const disp = useDispatch();\n    const dataUser = useSelector(selectDataUser);\n\n    const realScreenWidth = window.innerWidth;\n\n    const allDivDUFRef = useRef(null);\n\n    const forInpN = (e) => {\n        const inpV = e.target.value;\n        disp(setUserName(inpV));\n    };\n\n    const forInpE = (e) => {\n        const inpV = e.target.value;\n        disp(setUserEmail(inpV));\n    };\n\n    const forInpP = (e) => {\n        const inpV = e.target.value;\n        disp(setUserPhone(inpV));\n    };\n\n    const forInpA = (e) => {\n        const inpV = e.target.value;\n        disp(setUserAddress(inpV));\n    };\n\n    useEffect(() => {\n        if (allDivDUFRef.current) {\n            const allDivDUF = allDivDUFRef.current;\n            allDivDUF.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivDUF.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivDUF.style.padding = `${realScreenWidth/50}px`;\n            const labelDUForms = document.querySelectorAll('.labelDUForm');\n            const pRegDUForms = document.querySelectorAll('.pRegDUForm');\n            if (labelDUForms && pRegDUForms) {\n                let coef = 1000 / realScreenWidth;\n                let secCoef = 1.3;\n                if (realScreenWidth < 900 && realScreenWidth >= 800) {\n                    coef = 900 / realScreenWidth;\n                } else if (realScreenWidth < 800 && realScreenWidth >= 700) {\n                    coef = 800 / realScreenWidth;\n                } else if (realScreenWidth < 700 && realScreenWidth >= 600) {\n                    coef = 700 / realScreenWidth;\n                } else if (realScreenWidth < 600 && realScreenWidth >= 500) {\n                    coef = 600 / realScreenWidth;\n                } else if (realScreenWidth < 500 && realScreenWidth >= 400) {\n                    coef = 500 / realScreenWidth;\n                } else if (realScreenWidth < 400 && realScreenWidth >= 350) {\n                    coef = 450 / realScreenWidth;\n                } else if (realScreenWidth < 350 && realScreenWidth >= 310) {\n                    coef = 390 / realScreenWidth;\n                    secCoef = 1.6;\n                } else if (realScreenWidth < 310) {\n                    coef = 380 / realScreenWidth;\n                    secCoef = 1.7;\n                };\n                const screenWidth = realScreenWidth < 1000 ? realScreenWidth : 1000;\n                labelDUForms.forEach(lab => {\n                    lab.style.width = screenWidth / (2.86 * coef) + 'px';\n                    lab.style.fontSize = (screenWidth > 500) ? screenWidth / 55.56 + 'px' : '9px';\n                    lab.style.margin = screenWidth / 65 + 'px';\n                    lab.style.marginRight = (screenWidth / 25) * coef * secCoef + 'px';\n                });\n                pRegDUForms.forEach(p => {\n                    p.style.marginLeft = screenWidth / 100 + 'px';\n                });\n            }\n        }\n    });\n    return (\n        <div ref={allDivDUFRef} className={css.allDivDUF}>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Name</span>\n                <input className={css.inputDUForm} \n                value={dataUser.name}\n                onChange={e => forInpN(e)}\n                name='name'\n                type=\"text\"\n                autoComplete=\"on\"\n                autoFocus\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your name\"):(\"Name\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Email</span>\n                <input className={css.inputDUForm} \n                value={dataUser.email}\n                onChange={e => forInpE(e)}\n                name='email'\n                type=\"email\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your email\"):(\"Email\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Phone</span>\n                <input className={css.inputDUForm} \n                    oninput=\"this.value = this.value.replace(/[^0-9()+\\-]/g, '')\"\n                    onInput={(e) => {\n                                    e.target.value = e.target.value.replace(/[^0-9()+\\\\-]/g, '');\n                                }}\n                value={dataUser.phone}\n                onChange={e => forInpP(e)}\n                name='phone'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your phone\"):(\"Phone\")} />\n            </label>\n            <label className={[css.labelDUForm, 'labelDUForm'].join(' ')}>\n                    <span className={[css.pRegDUForm, 'pRegDUForm'].join(' ')}>Address</span>\n                <input className={css.inputDUForm} \n                value={dataUser.address}\n                onChange={e => forInpA(e)}\n                name='address'\n                type=\"text\"\n                autoComplete=\"on\"\n                placeholder={realScreenWidth > 455 ? (\"Please, enter your address\"):(\"Address\")} />\n            </label>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDivSD\":\"SavedDrugs_allDivSD__a3Zzi\",\"ulSD\":\"SavedDrugs_ulSD__4PaWR\"};","// extracted by mini-css-extract-plugin\nexport default {\"liSevDr\":\"SevDr_liSevDr__D-qwE\",\"drugDiv\":\"SevDr_drugDiv__42Fns\",\"favoriteBut\":\"SevDr_favoriteBut__n+Pj3\",\"isFavorite\":\"SevDr_isFavorite__2m8ZQ\",\"drugImg\":\"SevDr_drugImg__IeUJk\",\"infInpSevDr\":\"SevDr_infInpSevDr__9j43G\",\"infoDrug\":\"SevDr_infoDrug__XBIuj\",\"pInfoDrug\":\"SevDr_pInfoDrug__X-BRH\",\"inpButSevDr\":\"SevDr_inpButSevDr__oxgZk\",\"divInput\":\"SevDr_divInput__mxxip\",\"inputSavDr\":\"SevDr_inputSavDr__ox410\",\"minBut\":\"SevDr_minBut__-kx+N\",\"plusBut\":\"SevDr_plusBut__O7nIm\",\"addToBackedBut\":\"SevDr_addToBackedBut__q56jp\",\"divDelToBackedBut\":\"SevDr_divDelToBackedBut__FVUc0\"};","import css from \"./SevDr.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs, delDrFShop, setQuantityShop } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs } from \"../../redux/selectors\";\n\n\nexport const SevDr = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    \n    const isFav = favDr.includes(drug.id);\n\n    const liSevDrRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugImgRef = useRef(null);\n    const pNumeDrugRef = useRef(null);\n    const inpButSevDrRef = useRef(null);\n    const addToBackedButRef = useRef(null);\n    const divDelToBackedButRef = useRef(null);\n    const inputSavDrRef = useRef(null);\n    const plusButRef = useRef(null); \n    const minButRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    const delDrSh = (d) => {\n        dispatch(delDrFShop(d));\n    };\n\n    const setStInp = (d, inpValue) => {\n        const data = {\n            id: d.id,\n            quantity: inpValue\n        };\n        dispatch(setQuantityShop(data));\n    };\n\n    const updateValueInp = (d, evt) => {\n        evt.preventDefault();\n        const inpValue = evt.target.value;\n        setStInp(d, inpValue);\n    };\n\n    const forBlur = (d, evt) => {\n        const inpV = evt.target.value;\n        if (Number(inpV) <= 0) {\n            delDrSh(d);\n        };\n    };\n\n    const forPlus = (d) => {\n        const newValP = Number(d.quantity) + 1;\n        if (newValP > 0) {\n            setStInp(d, newValP);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    const forMin = (d) => {\n        const newValM = Number(d.quantity) - 1;\n        if (newValM > 0) {\n            setStInp(d, newValM);\n        } else{\n            delDrSh(d);\n        };\n    };\n\n    useEffect(() => {\n        if (liSevDrRef.current && drugDivRef.current && pNumeDrugRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugImgRef.current &&\n            inpButSevDrRef.current && addToBackedButRef.current && divDelToBackedButRef.current &&\n            inputSavDrRef.current && plusButRef.current && minButRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const drugLi = liSevDrRef.current;\n            const drugDiv = drugDivRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            const pNumeDrug = pNumeDrugRef.current;\n            const inpButSevDr = inpButSevDrRef.current;\n            const addToBackedBut = addToBackedButRef.current;\n            const divDelToBackedBut = divDelToBackedButRef.current;\n            const inputSavDr = inputSavDrRef.current;\n            const plusBut = plusButRef.current;\n            const minBut = minButRef.current;\n            const drugsUl = document.querySelector('.allDivSD');\n            if (drugsUl) {\n                const widthSize = drugsUl.clientWidth;\n                drugLi.style.height = `${widthSize/2}px`;\n                drugImg.style.width = widthSize / 2 + 'px';\n                drugImg.style.height = widthSize/4 + 'px';\n            };\n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 100 + 'px';\n            pNumeDrug.style.marginTop = realScreenWidth / 25 + 'px';\n            pNumeDrug.style.fontSize = realScreenWidth / 50 + 'px';\n            inpButSevDr.style.marginBottom = realScreenWidth / 50 + 'px';\n            inputSavDr.style.width = realScreenWidth > 450 ? realScreenWidth / 24 + 'px' : realScreenWidth / 50 + 'px';\n            inputSavDr.style.height = realScreenWidth / 24 - 2 + 'px';\n            inputSavDr.style.borderRadius = realScreenWidth / 72 + 'px';\n            inputSavDr.style.fontSize = realScreenWidth / 60 + 'px';\n\n            plusBut.style.height = realScreenWidth / 24 + 'px';\n            minBut.style.height = realScreenWidth / 24 + 'px';\n            plusBut.style.width =realScreenWidth / 50 + 'px';\n            minBut.style.width = realScreenWidth / 50 + 'px';\n            plusBut.style.fontSize = realScreenWidth / 40 + 'px';\n            minBut.style.fontSize = realScreenWidth / 40 + 'px';\n            plusBut.style.right = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n            minBut.style.left = realScreenWidth > 900 ? realScreenWidth / 600 + 'px' : realScreenWidth / 300 + 'px';\n\n            addToBackedBut.style.width = realScreenWidth / 13 + 'px';\n            addToBackedBut.style.height = realScreenWidth / 24 + 'px';\n            addToBackedBut.style.gap = realScreenWidth/288 + 'px';\n            addToBackedBut.style.borderRadius = realScreenWidth/72 + 'px';\n            addToBackedBut.style.fontSize = realScreenWidth/80 + 'px';\n            addToBackedBut.style.padding = `0 ${realScreenWidth/144}px 0 ${realScreenWidth/96}px`;\n            divDelToBackedBut.style.width = realScreenWidth / 48 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n            };\n        }\n    });\n    return (\n        <li ref={liSevDrRef} className={css.liSevDr}>\n            <div ref={drugDivRef} className={css.drugDiv}>\n            <button ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n                <div className={css.infInpSevDr}>\n                    <div ref={infoDrugRef} className={css.infoDrug}>\n                <p ref={pNumeDrugRef} className={css.pNumeDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n                </div>\n                    <div ref={inpButSevDrRef} className={css.inpButSevDr}>\n                        <div className={css.divInput}>\n                            <button\n                                type=\"button\"\n                                ref={minButRef}\n                                className={css.minBut}\n                                onClick={() => forMin(drug)}\n                            ></button>\n                            <input\n                                ref={inputSavDrRef}\n                                className={css.inputSavDr}\n                                name='quantity'\n                                type=\"text\"\n                                onInput={(e) => {\n                                    e.target.value = e.target.value.replace(/[^0-9]/g, '');\n                                }}\n                                value={drug.quantity}\n                                onChange={e => updateValueInp(drug, e)}\n                                onBlur={e => forBlur(drug, e)}\n                            />\n                            <button\n                                type=\"button\"\n                                ref={plusButRef}\n                                className={css.plusBut}\n                                onClick={() => forPlus(drug)}\n                            ></button>\n                        </div>\n                        <button\n                            ref={addToBackedButRef}\n                            className={css.addToBackedBut}\n                            onClick={() => delDrSh(drug)}>\n                <span>Delete</span>\n                <div ref={divDelToBackedButRef} className={css.divDelToBackedBut}></div>\n            </button>\n                </div>\n            </div>\n            </div>\n        </li>\n    )\n};","import { useEffect, useRef } from \"react\";\nimport css from \"./SavedDrugs.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectDrugsForShop } from \"../../redux/selectors\";\nimport { SevDr } from \"../SevDr/SevDr\";\n\nexport const SavedDrugs = ({realScreenHeight}) => {\n    const drugsSh = useSelector(selectDrugsForShop);\n\n    const allDivSDRef = useRef(null);\n    const ulSDRef = useRef(null);\n    const nothPRef = useRef(null);\n\n    useEffect(() => {\n        if (allDivSDRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const allDivSD = allDivSDRef.current;\n            allDivSD.style.height = realScreenHeight - realScreenHeight/2.5 + 'px';\n            allDivSD.style.width = (realScreenWidth - 40 - realScreenWidth / 50) / 2 - (realScreenWidth/50)*2 + 'px';\n            allDivSD.style.padding = `${realScreenWidth / 50}px`;\n            if (ulSDRef.current) {\n                const ulSD = ulSDRef.current;\n                ulSD.style.gap = realScreenWidth / 50 + 'px';\n            };\n            if (nothPRef.current) { \n                const nothP = nothPRef.current;\n                nothP.style.fontSize = realScreenWidth / 42 + 'px';\n            };\n        }\n    });\n    return (\n        <div ref={allDivSDRef} className={[css.allDivSD, 'allDivSD'].join(' ')}>\n            {drugsSh.length > 0 ? (\n            <ul ref={ulSDRef} className={[css.ulSD, 'ulSD'].join(' ')}>\n                {drugsSh.map(d => <SevDr key={d.id} drug={d}/>)}\n            </ul>\n            ) : (\n                    <p ref={nothPRef}>You haven't selected any products yet</p>\n            )}\n        </div>\n    )\n};","import css from \"./ShoppingCart.module.css\";\nimport { DataUserForm } from \"../DataUserForm/DataUserForm\";\nimport { SavedDrugs } from \"../SavedDrugs/SavedDrugs\";\nimport { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDrugsForShop } from \"../../redux/selectors\";\nimport { delAllDrSh } from \"../../redux/drugsLSSlice\";\n\nconst ShoppingCart = () => {\n    const disp = useDispatch();\n\n    const realScreenHeight = window.innerHeight;\n    const drForSh = useSelector(selectDrugsForShop);\n\n    let allPrice = 0;\n    if (drForSh.length > 0) {\n        let allPr = 0;\n        drForSh.forEach(dr => {\n            allPr += Number(dr.price.replace(/,/g, \".\")) * Number(dr.quantity);\n        });\n        allPrice = allPr.toFixed(2).replace(/\\./g, \",\")\n    };\n\n    const divDataUsSavDrRef = useRef(null);\n    const divTotButShCRef = useRef(null);\n    const buttonShDelRef = useRef(null);\n    const buttonShCFormRef = useRef(null);\n    const divSvgBDelRef = useRef(null);\n    const divSvgBShCRef = useRef(null);\n    const totShCRef = useRef(null);\n\n    const forAllDel = () => {\n        disp(delAllDrSh());\n    };\n\n    useEffect(() => {\n        if (divDataUsSavDrRef.current&& divTotButShCRef.current && buttonShCFormRef.current &&\n            divSvgBShCRef.current && totShCRef.current && buttonShDelRef.current && divSvgBDelRef.current) {\n            const realScreenWidth = window.innerWidth;\n            const divDataUsSavDr = divDataUsSavDrRef.current;\n            const divTotButShC = divTotButShCRef.current;\n            const buttonShDel = buttonShDelRef.current;\n            const buttonShCForm = buttonShCFormRef.current;\n            const divSvgBDel = divSvgBDelRef.current;\n            const divSvgBShC = divSvgBShCRef.current;\n            const totShC = totShCRef.current;\n            divDataUsSavDr.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.gap = realScreenWidth / 50 + 'px';\n            divTotButShC.style.paddingTop = realScreenWidth / 100 + 'px';\n            buttonShDel.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShDel.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShDel.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShDel.style.gap = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.width = realScreenWidth / 6.67 + 'px';\n            buttonShCForm.style.borderRadius = realScreenWidth/66.67 + 'px';\n            buttonShCForm.style.fontSize = realScreenWidth/55.556 + 'px';\n            buttonShCForm.style.gap = realScreenWidth / 66.67 + 'px';\n            divSvgBDel.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBDel.style.height = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.width = realScreenWidth / 33.33 + 'px';\n            divSvgBShC.style.height = realScreenWidth / 33.33 + 'px';\n            totShC.style.fontSize = realScreenWidth/41.667 + 'px';\n\n        }\n    });\n\n    return (\n        <>\n            <form className={css.formShC}>\n                <div ref={divDataUsSavDrRef} className={css.divDataUsSavDr}>\n                    <DataUserForm realScreenHeight={realScreenHeight}/>\n                    <SavedDrugs realScreenHeight={realScreenHeight}/>\n                </div>\n                <div ref={divTotButShCRef} className={css.divTotButShC}>\n                    <p ref={totShCRef} className={css.totShC}><b>Total price: {allPrice} &#8372;</b></p>\n                    <button\n                        ref={buttonShDelRef}\n                        className={css.buttonShCForm}\n                        onClick={forAllDel}\n                        type=\"button\">\n                    <p>Delete All</p>\n                    <div ref={divSvgBDelRef} className={css.divSvgBDel}></div>\n                </button>\n                <button ref={buttonShCFormRef} className={css.buttonShCForm} type=\"submit\">\n                    <p>To buy</p>\n                    <div ref={divSvgBShCRef} className={css.divSvgBShC}></div>\n                </button>\n                </div>\n            </form>\n        </>\n    )\n};\n\nexport default ShoppingCart;"],"names":["DataUserForm","_ref","realScreenHeight","disp","useDispatch","dataUser","useSelector","selectDataUser","realScreenWidth","window","innerWidth","allDivDUFRef","useRef","useEffect","current","allDivDUF","style","height","width","padding","concat","labelDUForms","document","querySelectorAll","pRegDUForms","coef","secCoef","screenWidth","forEach","lab","fontSize","margin","marginRight","p","marginLeft","_jsxs","ref","className","css","children","join","_jsx","value","name","onChange","e","inpV","target","setUserName","forInpN","type","autoComplete","autoFocus","placeholder","email","setUserEmail","forInpE","oninput","onInput","replace","phone","setUserPhone","forInpP","address","setUserAddress","forInpA","SevDr","drug","dispatch","isFav","selectFavoriteDrugs","includes","id","liSevDrRef","drugDivRef","favoriteRef","infoDrugRef","drugImgRef","pNumeDrugRef","inpButSevDrRef","addToBackedButRef","divDelToBackedButRef","inputSavDrRef","plusButRef","minButRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","delDrSh","d","delDrFShop","setStInp","inpValue","data","quantity","setQuantityShop","drugLi","drugDiv","favorite","infoDrug","drugImg","pNumeDrug","inpButSevDr","addToBackedBut","divDelToBackedBut","inputSavDr","plusBut","minBut","drugsUl","querySelector","widthSize","clientWidth","right","top","gap","marginTop","marginBottom","borderRadius","left","classList","add","remove","onClick","src","image","alt","price","dataWasAdded","newValM","Number","forMin","evt","preventDefault","updateValueInp","onBlur","forBlur","newValP","forPlus","SavedDrugs","drugsSh","selectDrugsForShop","allDivSDRef","ulSDRef","nothPRef","allDivSD","length","map","innerHeight","drForSh","allPrice","allPr","dr","toFixed","divDataUsSavDrRef","divTotButShCRef","buttonShDelRef","buttonShCFormRef","divSvgBDelRef","divSvgBShCRef","totShCRef","divDataUsSavDr","divTotButShC","buttonShDel","buttonShCForm","divSvgBDel","divSvgBShC","totShC","paddingTop","_Fragment","delAllDrSh"],"sourceRoot":""}