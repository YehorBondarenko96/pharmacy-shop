{"version":3,"file":"static/js/974.ddd9028c.chunk.js","mappings":"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","sources":["webpack://pharmacy-shop/./src/components/PharmaciesList/PharmaciesList.module.css?e8a0","components/Pharmacy/Pharmacy.jsx","components/PharmaciesList/PharmaciesList.jsx","webpack://pharmacy-shop/./src/components/DrugsList/DrugsList.module.css?6fce","webpack://pharmacy-shop/./src/components/Drug/Drug.module.css?803a","components/Drug/Drug.jsx","components/Loader/Loader.jsx","components/DrugsList/DrugsList.jsx","webpack://pharmacy-shop/./src/components/Shop/Shop.module.css?1757","webpack://pharmacy-shop/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://pharmacy-shop/./src/components/FilterAlf/FilterAlf.module.css?6bb4","webpack://pharmacy-shop/./src/components/DropListAlf/DropListAlf.module.css?bd9c","components/DropListAlf/DropListAlf.jsx","components/FilterAlf/FilterAlf.jsx","webpack://pharmacy-shop/./src/components/FilterPrice/FilterPrice.module.css?af0f","webpack://pharmacy-shop/./src/components/DropListPrice/DropListPrice.module.css?e3e6","components/DropListPrice/DropListPrice.jsx","components/FilterPrice/FilterPrice.jsx","webpack://pharmacy-shop/./src/components/FilterDate/FilterDate.module.css?4180","webpack://pharmacy-shop/./src/components/DropListDate/DropListDate.module.css?31a1","components/DropListDate/DropListDate.jsx","components/FilterDate/FilterDate.jsx","webpack://pharmacy-shop/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.jsx","components/Shop/Shop.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"allPharmaciesListDiv\":\"PharmaciesList_allPharmaciesListDiv__GRnVQ\",\"pharmaciesHlll\":\"PharmaciesList_pharmaciesHlll__oavoJ\",\"pharmaciesUl\":\"PharmaciesList_pharmaciesUl__Bzm-Q\",\"pharmaciesLi\":\"PharmaciesList_pharmaciesLi__zBPjA\",\"phormasyButton\":\"PharmaciesList_phormasyButton__ryQfU\",\"phormasyButtonAct\":\"PharmaciesList_phormasyButtonAct__bK8h8\"};","import css from \"../PharmaciesList/PharmaciesList.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPhafm } from \"../../redux/filterSlice\";\nimport { selectFilterPharm, selectScreenWidth } from \"../../redux/selectors\";\n\nexport const Pharmacy = ({ pharmacy }) => {\n    const disp = useDispatch();\n    const actId = useSelector(selectFilterPharm);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n\n    const phormasyButtonRef = useRef(null);\n\n    const butClick = (id) => {\n        disp(setPhafm(id));\n    }\n\n    useEffect(() => {\n        if (phormasyButtonRef.current) {\n            const phormasyButton = phormasyButtonRef.current;\n            phormasyButton.style.width = realScreenWidth / 9.6 + 'px';\n            phormasyButton.style.height = realScreenWidth / 29 + 'px';\n            phormasyButton.style.fontSize = realScreenWidth / 103 + 'px';\n            if (pharmacy.id === actId) {\n                phormasyButton.classList.add(css.phormasyButtonAct);\n            } else {\n                phormasyButton.classList.remove(css.phormasyButtonAct);\n                \n            }\n        }\n    });\n    return (\n        <button\n            ref={phormasyButtonRef}\n            className={css.phormasyButton}\n            type=\"button\"\n            onClick={() => butClick(pharmacy.id)}\n        >\n            {pharmacy.name}\n        </button>\n    )\n};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectPharmacies, selectFilterPharm, selectScreenWidth, selectScreenHeight } from \"../../redux/selectors\";\nimport css from \"./PharmaciesList.module.css\";\nimport { Pharmacy } from \"../Pharmacy/Pharmacy\";\nimport { useRef, useEffect } from \"react\";\nimport { setPhafm } from \"../../redux/filterSlice\";\n\nexport const PharmaciesList = () => {\n    const pharmacies = useSelector(selectPharmacies); \n    const disp = useDispatch();\n    const actId = useSelector(selectFilterPharm);\n    const realScreenWidth = useSelector(selectScreenWidth);\n    const realScreenHeight = useSelector(selectScreenHeight);\n\n    const allPharmaciesListDivRef = useRef(null);\n    const pharmaciesHlllRef = useRef(null);\n    const pharmaciesUlRef = useRef(null);\n    const phormasyButtonRef = useRef(null);\n\n    const butCl = () => {\n        disp(setPhafm(\"\"));\n    }\n\n    useEffect(() => {\n        const allIdsPh = pharmacies.map(p => p.id);\n        if (allPharmaciesListDivRef.current && pharmaciesHlllRef.current &&\n            pharmaciesUlRef.current && phormasyButtonRef.current) {\n            const allPharmaciesListDiv = allPharmaciesListDivRef.current;\n            const pharmaciesHlll = pharmaciesHlllRef.current; \n            const pharmaciesUl = pharmaciesUlRef.current;\n            allPharmaciesListDiv.style.height = `${realScreenHeight - realScreenHeight/3}px`;\n            pharmaciesHlll.style.margin = `${realScreenWidth / 72}px 0 0 0`;\n            pharmaciesHlll.style.fontSize = `${realScreenWidth / 80}px`;\n            pharmaciesUl.style.padding = `${realScreenWidth / 72}px ${realScreenWidth / 48}px`;\n            pharmaciesUl.style.gap = `${realScreenWidth / 72}px`;\n            const phormasyButton = phormasyButtonRef.current;\n            phormasyButton.style.width = realScreenWidth / 9.6 + 'px';\n            phormasyButton.style.height = realScreenWidth / 29 + 'px';\n            phormasyButton.style.fontSize = realScreenWidth / 103 + 'px';\n            \n            if (!allIdsPh.includes(actId)) {\n                phormasyButton.classList.add(css.phormasyButtonAct);\n            } else {\n                phormasyButton.classList.remove(css.phormasyButtonAct);\n                \n            }\n        }\n    });\n\n    return (\n    <div ref={allPharmaciesListDivRef} className={[css.allPharmaciesListDiv, \"allPharmaciesListDiv\"].join(' ')}>\n        {pharmacies.length > 0 ? (\n                <>\n                    <h3 ref={pharmaciesHlllRef} className={css.pharmaciesHlll}>Pharmacies</h3>\n                    <ul ref={pharmaciesUlRef} className={css.pharmaciesUl}>\n                        <li className={css.pharmaciesLi}>\n                            <button\n            ref={phormasyButtonRef}\n            className={css.phormasyButton}\n            type=\"button\"\n            onClick={butCl}\n        >\n            All pharmacies\n        </button>\n                        </li>\n                        {pharmacies.map(ph => (\n                            <li key={ph.id} className={css.pharmaciesLi}>\n                                <Pharmacy pharmacy={ph}/>\n            </li>\n        ))}\n                </ul>\n                </>\n        ) : (\n            <p>No pharmacies found</p>\n        )}\n    </div>\n)\n};","// extracted by mini-css-extract-plugin\nexport default {\"allDrugsListDiv\":\"DrugsList_allDrugsListDiv__E4Lwl\",\"drugsUl\":\"DrugsList_drugsUl__-etsM\"};","// extracted by mini-css-extract-plugin\nexport default {\"drugLi\":\"Drug_drugLi__Dxa3K\",\"drugDiv\":\"Drug_drugDiv__LOWKM\",\"favoriteBut\":\"Drug_favoriteBut__3I3NY\",\"isFavorite\":\"Drug_isFavorite__r6vaN\",\"drugImg\":\"Drug_drugImg__U65Fi\",\"addToBackedBut\":\"Drug_addToBackedBut__vi6OH\",\"divAddToBackedBut\":\"Drug_divAddToBackedBut__J8JyQ\",\"divDelToBackedBut\":\"Drug_divDelToBackedBut__hu0aJ\",\"infoDrug\":\"Drug_infoDrug__R2Dp6\",\"pInfoDrug\":\"Drug_pInfoDrug__RtNQu\"};","import css from \"./Drug.module.css\";\nimport { useEffect, useRef } from \"react\";\nimport { addFavoriteDrugs, delFavoriteDrugs, addDrFShop, delDrFShop } from \"../../redux/drugsLSSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFavoriteDrugs, selectDrugsForShop, selectScreenWidth } from \"../../redux/selectors\";\n\nexport const Drug = ({ drug }) => {\n    const dispatch = useDispatch();\n    const favDr = useSelector(selectFavoriteDrugs);\n    const shDr = useSelector(selectDrugsForShop);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const isFav = favDr.includes(drug.id);\n    const inTrol = shDr.some(sd => sd.id === drug.id);\n\n    const addToBackedButRef = useRef(null);\n    const drugDivRef = useRef(null);\n    const divAddToBackedButRef = useRef(null);\n    const favoriteRef = useRef(null);\n    const infoDrugRef = useRef(null);\n    const drugLiRef = useRef(null);\n    const drugImgRef = useRef(null);\n\n    const addFavDr = (id) => {\n        dispatch(addFavoriteDrugs(id));\n    };\n\n    const delFavDr = (id) => {\n        dispatch(delFavoriteDrugs(id));\n    };\n\n    const addOrDel = (id) => {\n        if (isFav) {\n            delFavDr(id)\n        } else {\n            addFavDr(id)\n        }\n    };\n\n    const addDrSh = (d) => {\n        dispatch(addDrFShop(d));\n    };\n\n    const delDrSh = (d) => {\n        dispatch(delDrFShop(d));\n    };\n\n    const addTrOrDel = (d) => {\n        if (inTrol) {\n            delDrSh(d);\n        } else {\n            addDrSh(d);\n        }\n    };\n\n    useEffect(() => {\n        if (addToBackedButRef.current && drugDivRef.current && divAddToBackedButRef.current &&\n            favoriteRef.current && infoDrugRef.current && drugLiRef.current && drugImgRef.current) {\n            const drugLi = drugLiRef.current;\n            const drugDiv = drugDivRef.current;\n            const addToBackedBut = addToBackedButRef.current;\n            const divAddToBackedBut = divAddToBackedButRef.current;\n            const favorite = favoriteRef.current;\n            const infoDrug = infoDrugRef.current;\n            const drugImg = drugImgRef.current;\n            \n            const widthSize = (((realScreenWidth - realScreenWidth / 6.6 - 40) - (realScreenWidth / 50) * 2) - (realScreenWidth / 55) * 2)/2;\n            drugLi.style.width = `${widthSize}px`;\n            drugLi.style.height = `${widthSize * 1.176}px`;\n            \n            drugDiv.style.fontSize = realScreenWidth / 103 + 'px';\n            drugLi.style.paddingBottom = realScreenWidth / 72 + 'px';\n            addToBackedBut.style.height = realScreenWidth / 24 + 'px';\n            addToBackedBut.style.gap = realScreenWidth/288 + 'px';\n            addToBackedBut.style.right = realScreenWidth/72 + 'px';\n            addToBackedBut.style.bottom = realScreenWidth/72 + 'px';\n            addToBackedBut.style.borderRadius = realScreenWidth/72 + 'px';\n            addToBackedBut.style.fontSize = realScreenWidth/80 + 'px';\n            addToBackedBut.style.padding = `0 ${realScreenWidth/144}px 0 ${realScreenWidth/96}px`;\n            divAddToBackedBut.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.width = realScreenWidth / 48 + 'px';\n            favorite.style.height = realScreenWidth / 48 + 'px';\n            favorite.style.right = realScreenWidth/72 + 'px';\n            favorite.style.top = realScreenWidth / 72 + 'px';\n            infoDrug.style.marginLeft = realScreenWidth / 72 + 'px';\n            infoDrug.style.gap = realScreenWidth / 144 + 'px';\n            drugImg.style.margin = realScreenWidth / 35 + 'px';\n            if (isFav) {\n                favorite.classList.add(css.isFavorite);\n            } else {\n                favorite.classList.remove(css.isFavorite);\n                \n            };\n            if (inTrol) {\n                divAddToBackedBut.classList.add(css.divDelToBackedBut);\n            } else {\n                divAddToBackedBut.classList.remove(css.divDelToBackedBut);\n                \n            }\n        }\n    });\n    \n    return (\n        <li ref={drugLiRef} className={css.drugLi}>\n        <div ref={drugDivRef} className={css.drugDiv}>\n            <button type=\"button\" ref={favoriteRef} className={css.favoriteBut} onClick={() => addOrDel(drug.id)}></button>\n            <img ref={drugImgRef} className={css.drugImg} src={drug.image} alt={drug.name} />\n            <div ref={infoDrugRef} className={css.infoDrug}>\n                <p className={css.pInfoDrug}><b>{drug.name}</b></p>\n                <p className={css.pInfoDrug}><b>Price: </b>{drug.price} &#8372;</p>\n                <p className={css.pInfoDrug}><b>Manufacturing date:</b> {drug.dataWasAdded}</p>\n            </div>\n            <button type=\"button\" ref={addToBackedButRef} className={css.addToBackedBut} onClick={() => addTrOrDel(drug)}>\n                {inTrol ? <span>Delete</span> : <span>Add</span>}\n                <div ref={divAddToBackedButRef} className={css.divAddToBackedBut}></div>\n            </button>\n            </div>\n            </li>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import { useSelector } from \"react-redux\";\nimport {\n    selectDrugs,\n    selectPharmacies,\n    selectFavoriteDrugs,\n    selectFilter,\n    selectFilterPharm,\n    selectFilterAlf,\n    selectFilterPrice,\n    selectFilterDate,\n    selectIsLoading,\n    selectScreenHeight,\n    selectScreenWidth\n} from \"../../redux/selectors\";\nimport css from \"./DrugsList.module.css\";\nimport { Drug } from \"../Drug/Drug\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Loader } from \"../Loader/Loader\";\n\nexport const DrugsList = () => {\n    const allDrugs = useSelector(selectDrugs); \n    const fevDrugsId = useSelector(selectFavoriteDrugs);\n    const filter = useSelector(selectFilter);\n    const selAlf = useSelector(selectFilterAlf);\n    const selPr = useSelector(selectFilterPrice);\n    const selDate = useSelector(selectFilterDate);\n    const allPharm = useSelector(selectPharmacies);\n    const actId = useSelector(selectFilterPharm);\n    const isLoading = useSelector(selectIsLoading);\n    const realScreenHeight = useSelector(selectScreenHeight);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const [drugs, setDrugs] = useState(allDrugs);\n    const [fevDrRend, setFevDrRend] = useState([]);\n    const [notFvDrRend, setNotFvDrRend] = useState([]);\n\n    const fevDrugsIdRef = useRef(fevDrugsId);\n    const pNoFoundRef = useRef(null);\n\n    useEffect(() => {\n        let pasDrugs = [...allDrugs];\n\n        if (actId !== \"\") {\n        const actPh = allPharm.find(p => p.id === actId);\n        pasDrugs = [...actPh.available];\n    };\n        \n        if (pasDrugs.length > 0) {\n            switch (selAlf) {\n            case \"a\":\n                pasDrugs.sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            });\n                break;\n            case \"z\":\n                pasDrugs.sort((a, b) => {\n                return b.name.localeCompare(a.name);\n            });\n                break;\n                default:\n                    break\n            };\n            \n            switch (selPr) {\n            case \"l\":\n                pasDrugs.sort((a, b) => parseFloat(a.price.replace(',', '.')) - parseFloat(b.price.replace(',', '.')));\n                break;\n            case \"h\":\n                pasDrugs.sort((a, b) => parseFloat(b.price.replace(',', '.')) - parseFloat(a.price.replace(',', '.')));\n                break;\n                default:\n                    break\n            };\n\n            function parseDate(dateString) {\n    const parts = dateString.split('.');\n    return new Date(parts[2], parts[1] - 1, parts[0]); \n            };\n            \n            switch (selDate) {\n        case \"w\":\n                pasDrugs.sort((a, b) => parseDate(b.dataWasAdded) - parseDate(a.dataWasAdded));\n                \n                break;\n                case \"o\":\n                    pasDrugs.sort((a, b) => parseDate(a.dataWasAdded) - parseDate(b.dataWasAdded));\n                break;\n                default:\n                    break\n        };\n\n\n        if (filter.length > 0) {\n            setDrugs(pasDrugs.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase())));\n        }\n        else {\n            setDrugs(pasDrugs);\n        };\n        }\n    }, [filter, allDrugs, selAlf, selPr, selDate, actId, allPharm]);\n    \n    useEffect(() => {\n        if (fevDrugsIdRef.current.length > 0) {\n            setFevDrRend(drugs.filter(d => fevDrugsIdRef.current.includes(d.id)));\n            setNotFvDrRend(drugs.filter(d => !fevDrugsIdRef.current.includes(d.id)));\n        }\n    }, [drugs, filter, allDrugs, selAlf]);\n\n    const allDrugsListDivRef = useRef(null);\n    const drugsUlRef = useRef(null);\n\n    useEffect(() => {\n        if (allDrugsListDivRef.current) {\n            // const allPharmaciesListDiv = document.querySelector('.allPharmaciesListDiv');\n            const allDrugsListDiv = allDrugsListDivRef.current;\n            allDrugsListDiv.style.height = `${realScreenHeight - realScreenHeight / 3}px`;\n            // if (allPharmaciesListDiv) {\n            const allDrugsListDivWidth = realScreenWidth - realScreenWidth / 6.6 - 40;\n                allDrugsListDiv.style.width = `${allDrugsListDivWidth}px`;\n            // }\n            allDrugsListDiv.style.margin = `0 0 0 ${realScreenWidth / 72}px`;\n        \n            if (drugsUlRef.current) {\n                const drugsUl = drugsUlRef.current;\n                drugsUl.style.width = `${allDrugsListDivWidth - (realScreenWidth / 48) * 2}px`;\n                drugsUl.style.padding = `${realScreenWidth / 72}px ${realScreenWidth / 48}px`;\n                drugsUl.style.gap = `${realScreenWidth / 72}px ${realScreenWidth / 29}px`;\n            };\n        };\n        if (pNoFoundRef.current) {\n            const pNoFound = pNoFoundRef.current;\n            pNoFound.style.fontSize = realScreenWidth/42 + 'px';\n        }\n\n    })\n\n    return (\n    <div ref={allDrugsListDivRef} className={css.allDrugsListDiv}>\n            {isLoading ? <Loader /> :\n                drugs.length > 0 ? (fevDrRend.length > 0 ? (\n                <>\n                <ul ref={drugsUlRef} className={[css.drugsUl, 'drugsUl'].join(' ')}>\n                        {fevDrRend.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr}/>))}\n                        {notFvDrRend.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr}/>))}\n                        \n                </ul>\n                </>\n            ): (\n                <>\n                <ul ref={drugsUlRef} className={[css.drugsUl, 'drugsUl'].join(' ')}>\n                        {drugs.map(dr => (<Drug key={dr.id + (Math.random() * 1000000000)} drug={dr}/>))}\n                </ul>\n                </>\n        )\n        ) : (\n            <p ref={pNoFoundRef}>No drugs found</p>\n        )}\n    </div>\n)\n};","// extracted by mini-css-extract-plugin\nexport default {\"allShopDiv\":\"Shop_allShopDiv__-Okbb\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, selectScreenWidth } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport { useState, useEffect, useRef } from 'react';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const realScreenWidth = useSelector(selectScreenWidth);\n    const dispatch = useDispatch();\n    const [placeholderValue, setPlaceholderValue] = useState('');\n\n    const inputFilterRef = useRef(null);\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n    useEffect(() => {\n        if(realScreenWidth > 465){\n            setPlaceholderValue('Please start typing the desired name')\n        } else if(realScreenWidth <= 465 && realScreenWidth > 370){\n            setPlaceholderValue('Please start typing name')\n        } else {\n            setPlaceholderValue('Type name')\n        };\n\n        if (inputFilterRef.current) {\n            const inputFilter = inputFilterRef.current;\n            inputFilter.style.borderRadius = realScreenWidth / 100 + 'px';\n            inputFilter.style.width = realScreenWidth/2 + 'px';\n            inputFilter.style.height = realScreenWidth/25 + 'px';\n            inputFilter.style.padding = `0 ${realScreenWidth/100}px`;\n            inputFilter.style.margin = `${realScreenWidth / 50}px 0`;\n            inputFilter.style.fontSize = `${realScreenWidth/71}px`;\n        };\n    }, [realScreenWidth]);\n\n        return(\n            <input \n                ref={inputFilterRef}\n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder={placeholderValue}\n                onChange={updateStateForFilter}\n                />\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"allFiltAlf\":\"FilterAlf_allFiltAlf__idDN7\",\"secAllDiv\":\"FilterAlf_secAllDiv__PX7Lw\",\"allButtonFA\":\"FilterAlf_allButtonFA__sV2Ai\",\"allButtonFAAct\":\"FilterAlf_allButtonFAAct__C1yhB\",\"divArrow\":\"FilterAlf_divArrow__fkkZy\",\"divArrowAct\":\"FilterAlf_divArrowAct__n+tDs\",\"divDrL\":\"FilterAlf_divDrL__vVc+q\",\"divDrLAct\":\"FilterAlf_divDrLAct__9oLFa\"};","// extracted by mini-css-extract-plugin\nexport default {\"ulDrL\":\"DropListAlf_ulDrL__uJXav\",\"buttonFA\":\"DropListAlf_buttonFA__gwb2L\"};","import css from \"./DropListAlf.module.css\";\nimport { setAlf, setPrice, setDate } from \"../../redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRef, useEffect } from \"react\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const DropListAlf = () => {\n    const disp = useDispatch();\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const a = \"a\";\n    const n = \"n\";\n    const z = \"z\";\n\n    const ulDrLRef = useRef(null);\n    const firstChildRef = useRef(null);\n    const lastChildRef = useRef(null);\n\n    const setState = (l) => {\n        disp(setAlf(l));\n        disp(setPrice(n));\n        disp(setDate(n));\n    };\n\n    useEffect(() => {\n        if (ulDrLRef.current && firstChildRef.current && lastChildRef.current) {\n            const ulDrL = ulDrLRef.current;\n            const firstChild = firstChildRef.current;\n            const lastChild = lastChildRef.current;\n            const buttonFAs = document.querySelectorAll('.buttonFA');\n            const divArrows = document.querySelectorAll('.divArrow');\n\n            ulDrL.style.width = realScreenWidth / 10 + 'px';\n            ulDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n            firstChild.style.borderRadius = `${realScreenWidth / 111}px ${realScreenWidth / 111}px 0 0`;\n            lastChild.style.borderRadius = `0 0 ${realScreenWidth / 111}px ${realScreenWidth / 111}px`;\n            if (buttonFAs) {\n                buttonFAs.forEach(buttonFA => {\n                    buttonFA.style.width = realScreenWidth / 10 + 'px';\n                    buttonFA.style.fontSize = realScreenWidth / 71 + 'px';\n                    buttonFA.style.height = realScreenWidth / 24 + 'px';\n                    buttonFA.style.gap = realScreenWidth / 66.67 + 'px';\n                    buttonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n                })\n            }\n            if (divArrows) {\n                divArrows.forEach(divArrow => {\n                    divArrow.style.width = realScreenWidth / 50 + 'px';\n                    divArrow.style.height = realScreenWidth / 50 + 'px';\n                })\n            }\n        }\n    });\n\n    return (\n        <ul ref={ulDrLRef} className={css.ulDrL}>\n            <li>\n                <button type=\"button\" ref={firstChildRef} className={[css.buttonFA, css.firstChild, 'buttonFA'].join(\" \")} onClick={() => {setState(a)}}>\n                    <p>A to Z</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" className={[css.buttonFA, 'buttonFA'].join(\" \")} onClick={() => {setState(z)}}>\n                    <p>Z to A</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" ref={lastChildRef} className={[css.buttonFA, css.lastChild, 'buttonFA'].join(\" \")} onClick={() => {setState(n)}}>\n                    <p>Reset</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n        </ul>\n    )\n};","import css from './FilterAlf.module.css';\nimport { DropListAlf } from '../DropListAlf/DropListAlf';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterAlf, selectScreenWidth } from '../../redux/selectors';\n\nexport const FilterAlf = () => {\n    const allFiltAlfRef = useRef(null);\n    const secAllDivRef = useRef(null);\n    const allButtonFARef = useRef(null);\n    const divDrLRef = useRef(null);\n    const divArrowRef = useRef(null);\n\n    const realScreenWidth = useSelector(selectScreenWidth);\n    const selAlf = useSelector(selectFilterAlf);\n\n\n    const [drListOn, setDrListOn] = useState(false);\n\n    const a = 'A to Z';\n    const z = 'Z to A';\n\n    const [filVal, setFilVal] = useState(a);\n\n\n    useEffect(() => {\n        if (allButtonFARef.current) {\n            switch (selAlf) {\n                case \"a\":\n                    setFilVal(a);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                case \"z\":\n                    setFilVal(z);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                default:\n                    setFilVal(a);\n                    allButtonFARef.current.classList.remove(css.allButtonFAAct);\n\n    };\n        }\n    }, [selAlf]);\n\n    useEffect(() => {\n        if (allFiltAlfRef.current && secAllDivRef.current && allButtonFARef.current &&\n            divArrowRef.current && divDrLRef.current) {\n            const allFiltAlf = allFiltAlfRef.current;\n            const secAllDiv = secAllDivRef.current;\n            const allButtonFA = allButtonFARef.current;\n            const divArrow = divArrowRef.current;\n            const divDrL = divDrLRef.current;\n\n            allFiltAlf.style.height = realScreenWidth / 24 + 'px';\n            allFiltAlf.style.width = realScreenWidth / 10 + 'px';\n            secAllDiv.style.height = realScreenWidth / 5 + 'px';\n            secAllDiv.style.width = realScreenWidth / 9.1 + 'px';\n            allButtonFA.style.fontSize = realScreenWidth / 71 + 'px';\n            allButtonFA.style.width = realScreenWidth / 10 + 'px';\n            allButtonFA.style.height = realScreenWidth / 24 + 'px';\n            allButtonFA.style.gap = realScreenWidth / 66.67 + 'px';\n            allButtonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n            allButtonFA.style.borderRadius = realScreenWidth / 100 + 'px';\n            divArrow.style.height = realScreenWidth / 50 + 'px';\n            divArrow.style.width = realScreenWidth / 50 + 'px';\n            divDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n        }\n    });\n\n    const remCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            divDrLRef.current.classList.remove(css.divDrLAct);\n            divArrowRef.current.classList.remove(css.divArrowAct);\n            window.removeEventListener('click', remCl);\n            setDrListOn(false);\n        }\n    };\n\n    const addCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            setTimeout(() => {\n                setDrListOn(true);\n                divDrLRef.current.classList.add(css.divDrLAct);\n                divArrowRef.current.classList.add(css.divArrowAct);\n                window.addEventListener('click', remCl);\n            }, 0)\n        }\n    };\n\n    const clickAllB = () => {\n        if (drListOn) {\n            remCl();\n        } else {\n            addCl();\n        }\n    };\n\n    return (\n        <div ref={allFiltAlfRef} className={css.allFiltAlf}>\n            <div ref={secAllDivRef} className={css.secAllDiv}>\n                <button type=\"button\" ref={allButtonFARef} className={css.allButtonFA} onClick={clickAllB}>\n                    <p>{filVal}</p>\n                <div ref={divArrowRef} className={css.divArrow}></div>\n            </button>\n            <div ref={divDrLRef} className={css.divDrL}>\n                <DropListAlf/>\n            </div>\n            </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allFiltAlf\":\"FilterPrice_allFiltAlf__co4LR\",\"secAllDiv\":\"FilterPrice_secAllDiv__YmL13\",\"allButtonFA\":\"FilterPrice_allButtonFA__G+XRt\",\"allButtonFAAct\":\"FilterPrice_allButtonFAAct__+vu-C\",\"divArrow\":\"FilterPrice_divArrow__hIrJ5\",\"divArrowAct\":\"FilterPrice_divArrowAct__NYeVm\",\"divDrL\":\"FilterPrice_divDrL__3zg+G\",\"divDrLAct\":\"FilterPrice_divDrLAct__IkK3P\"};","// extracted by mini-css-extract-plugin\nexport default {\"ulDrL\":\"DropListPrice_ulDrL__rDk-S\",\"buttonFA\":\"DropListPrice_buttonFA__6P-H4\"};","import css from \"./DropListPrice.module.css\";\nimport { setPrice, setAlf, setDate } from \"../../redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRef, useEffect } from \"react\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const DropListPrice = () => {\n    const disp = useDispatch();\n    \n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const l = \"l\";\n    const n = \"n\";\n    const h = \"h\";\n\n    const ulDrLRef = useRef(null);\n    const firstChildRef = useRef(null);\n    const lastChildRef = useRef(null);\n\n    const setState = (l) => {\n        disp(setPrice(l));\n        disp(setAlf(n));\n        disp(setDate(n));\n    };\n\n    useEffect(() => {\n        if (ulDrLRef.current && firstChildRef.current && lastChildRef.current) {\n            const ulDrL = ulDrLRef.current;\n            const firstChild = firstChildRef.current;\n            const lastChild = lastChildRef.current;\n            const buttonFAs = document.querySelectorAll('.buttonFA');\n            const divArrows = document.querySelectorAll('.divArrow');\n\n            ulDrL.style.width = realScreenWidth / 10 + 'px';\n            ulDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n            firstChild.style.borderRadius = `${realScreenWidth / 111}px ${realScreenWidth / 111}px 0 0`;\n            lastChild.style.borderRadius = `0 0 ${realScreenWidth / 111}px ${realScreenWidth / 111}px`;\n            if (buttonFAs) {\n                buttonFAs.forEach(buttonFA => {\n                    buttonFA.style.width = realScreenWidth / 10 + 'px';\n                    buttonFA.style.fontSize = realScreenWidth / 71 + 'px';\n                    buttonFA.style.height = realScreenWidth / 24 + 'px';\n                    buttonFA.style.gap = realScreenWidth / 66.67 + 'px';\n                    buttonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n                })\n            }\n            if (divArrows) {\n                divArrows.forEach(divArrow => {\n                    divArrow.style.width = realScreenWidth / 50 + 'px';\n                    divArrow.style.height = realScreenWidth / 50 + 'px';\n                })\n            }\n        }\n    });\n\n    return (\n        <ul ref={ulDrLRef} className={css.ulDrL}>\n            <li>\n                <button type=\"button\" ref={firstChildRef} className={[css.buttonFA, css.firstChild, 'buttonFA'].join(\" \")} onClick={() => {setState(l)}}>\n                    <p>L to H</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" className={[css.buttonFA, 'buttonFA'].join(\" \")} onClick={() => {setState(h)}}>\n                    <p>H to L</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" ref={lastChildRef} className={[css.buttonFA, css.lastChild, 'buttonFA'].join(\" \")} onClick={() => {setState(n)}}>\n                    <p>Reset</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n        </ul>\n    )\n};","import css from './FilterPrice.module.css';\nimport { DropListPrice } from '../DropListPrice/DropListPrice';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterPrice, selectScreenWidth } from '../../redux/selectors';\n\nexport const FilterPrice = () => {\n    const allFiltAlfRef = useRef(null);\n    const secAllDivRef = useRef(null);\n    const allButtonFARef = useRef(null);\n    const divDrLRef = useRef(null);\n    const divArrowRef = useRef(null);\n\n    const [drListOn, setDrListOn] = useState(false);\n\n    const l = 'L to H';\n    const h = 'H to L';\n\n    const [filVal, setFilVal] = useState(l);\n\n    const selPr = useSelector(selectFilterPrice);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n\n    useEffect(() => {\n        if (allButtonFARef.current) {\n            switch (selPr) {\n                case \"l\":\n                    setFilVal(l);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                case \"h\":\n                    setFilVal(h);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                default:\n                    setFilVal(l);\n                    allButtonFARef.current.classList.remove(css.allButtonFAAct);\n\n    };\n        }\n    }, [selPr]);\n\n    useEffect(() => {\n        if (allFiltAlfRef.current && secAllDivRef.current && allButtonFARef.current &&\n            divArrowRef.current && divDrLRef.current) {\n            const allFiltAlf = allFiltAlfRef.current;\n            const secAllDiv = secAllDivRef.current;\n            const allButtonFA = allButtonFARef.current;\n            const divArrow = divArrowRef.current;\n            const divDrL = divDrLRef.current;\n\n            allFiltAlf.style.height = realScreenWidth / 24 + 'px';\n            allFiltAlf.style.width = realScreenWidth / 10 + 'px';\n            secAllDiv.style.height = realScreenWidth / 5 + 'px';\n            secAllDiv.style.width = realScreenWidth / 9.1 + 'px';\n            allButtonFA.style.fontSize = realScreenWidth / 71 + 'px';\n            allButtonFA.style.width = realScreenWidth / 10 + 'px';\n            allButtonFA.style.height = realScreenWidth / 24 + 'px';\n            allButtonFA.style.gap = realScreenWidth / 66.67 + 'px';\n            allButtonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n            allButtonFA.style.borderRadius = realScreenWidth / 100 + 'px';\n            divArrow.style.height = realScreenWidth / 50 + 'px';\n            divArrow.style.width = realScreenWidth / 50 + 'px';\n            divDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n        }\n    });\n\n    const remCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            divDrLRef.current.classList.remove(css.divDrLAct);\n            divArrowRef.current.classList.remove(css.divArrowAct);\n            window.removeEventListener('click', remCl);\n            setDrListOn(false);\n        }\n    };\n\n    const addCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            setTimeout(() => {\n                setDrListOn(true);\n                divDrLRef.current.classList.add(css.divDrLAct);\n                divArrowRef.current.classList.add(css.divArrowAct);\n                window.addEventListener('click', remCl);\n            }, 0)\n        }\n    };\n\n    const clickAllB = () => {\n        if (drListOn) {\n            remCl();\n        } else {\n            addCl();\n        }\n    };\n\n    return (\n        <div ref={allFiltAlfRef} className={css.allFiltAlf}>\n            <div ref={secAllDivRef} className={css.secAllDiv}>\n                <button type=\"button\" ref={allButtonFARef} className={css.allButtonFA} onClick={clickAllB}>\n                    <p>{filVal}</p>\n                <div ref={divArrowRef} className={css.divArrow}></div>\n            </button>\n            <div ref={divDrLRef} className={css.divDrL}>\n                <DropListPrice/>\n            </div>\n            </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allFiltAlf\":\"FilterDate_allFiltAlf__bF5bg\",\"secAllDiv\":\"FilterDate_secAllDiv__v2VGg\",\"allButtonFA\":\"FilterDate_allButtonFA__AXd1R\",\"allButtonFAAct\":\"FilterDate_allButtonFAAct__b92rs\",\"divArrow\":\"FilterDate_divArrow__VFZMu\",\"divArrowAct\":\"FilterDate_divArrowAct__UUKUR\",\"divDrL\":\"FilterDate_divDrL__ekd30\",\"divDrLAct\":\"FilterDate_divDrLAct__pJ9Vm\"};","// extracted by mini-css-extract-plugin\nexport default {\"ulDrL\":\"DropListDate_ulDrL__6FRpr\",\"buttonFA\":\"DropListDate_buttonFA__yAJq4\"};","import css from \"./DropListDate.module.css\";\nimport { setDate, setAlf, setPrice } from \"../../redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRef, useEffect } from \"react\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const DropListDate = () => {\n    const disp = useDispatch();\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n    const w = \"w\";\n    const n = \"n\";\n    const o = \"o\";\n\n    const ulDrLRef = useRef(null);\n    const firstChildRef = useRef(null);\n    const lastChildRef = useRef(null);\n\n    const setState = (l) => {\n        disp(setDate(l));\n        disp(setAlf(n));\n        disp(setPrice(n));\n    };\n\n    useEffect(() => {\n        if (ulDrLRef.current && firstChildRef.current && lastChildRef.current) {\n            const ulDrL = ulDrLRef.current;\n            const firstChild = firstChildRef.current;\n            const lastChild = lastChildRef.current;\n            const buttonFAs = document.querySelectorAll('.buttonFA');\n            const divArrows = document.querySelectorAll('.divArrow');\n\n            ulDrL.style.width = realScreenWidth / 10 + 'px';\n            ulDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n            firstChild.style.borderRadius = `${realScreenWidth / 111}px ${realScreenWidth / 111}px 0 0`;\n            lastChild.style.borderRadius = `0 0 ${realScreenWidth / 111}px ${realScreenWidth / 111}px`;\n            if (buttonFAs) {\n                buttonFAs.forEach(buttonFA => {\n                    buttonFA.style.width = realScreenWidth / 10 + 'px';\n                    buttonFA.style.fontSize = realScreenWidth / 71 + 'px';\n                    buttonFA.style.height = realScreenWidth / 24 + 'px';\n                    buttonFA.style.gap = realScreenWidth / 66.67 + 'px';\n                    buttonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n                })\n            }\n            if (divArrows) {\n                divArrows.forEach(divArrow => {\n                    divArrow.style.width = realScreenWidth / 50 + 'px';\n                    divArrow.style.height = realScreenWidth / 50 + 'px';\n                })\n            }\n        }\n    });\n\n    return (\n        <ul ref={ulDrLRef} className={css.ulDrL}>\n            <li>\n                <button type=\"button\" ref={firstChildRef} className={[css.buttonFA, css.firstChild, 'buttonFA'].join(\" \")} onClick={() => {setState(w)}}>\n                    <p>N to O</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" className={[css.buttonFA, 'buttonFA'].join(\" \")} onClick={() => {setState(o)}}>\n                    <p>O to N</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n            <li>\n                <button type=\"button\" ref={lastChildRef} className={[css.buttonFA, css.lastChild, 'buttonFA'].join(\" \")} onClick={() => {setState(n)}}>\n                    <p>Reset</p>\n                <div className={[css.divArrow, 'divArrow'].join(\" \")}></div>\n                </button>\n            </li>\n        </ul>\n    )\n};","import css from './FilterDate.module.css';\nimport { DropListDate } from '../DropListDate/DropListDate';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterDate, selectScreenWidth } from '../../redux/selectors';\n\nexport const FilterDate = () => {\n    const allFiltAlfRef = useRef(null);\n    const secAllDivRef = useRef(null);\n    const allButtonFARef = useRef(null);\n    const divDrLRef = useRef(null);\n    const divArrowRef = useRef(null);\n\n    const [drListOn, setDrListOn] = useState(false);\n\n    const w = 'N to O';\n    const o = 'O to N';\n\n    const [filVal, setFilVal] = useState(w);\n\n    const selDate = useSelector(selectFilterDate);\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n\n\n    useEffect(() => {\n        if (allButtonFARef.current) {\n            switch (selDate) {\n                case \"w\":\n                    setFilVal(w);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                case \"o\":\n                    setFilVal(o);\n                    allButtonFARef.current.classList.add(css.allButtonFAAct);\n                    break;\n                default:\n                    setFilVal(w);\n                    allButtonFARef.current.classList.remove(css.allButtonFAAct);\n\n    };\n        }\n    }, [selDate]);\n\n    useEffect(() => {\n        if (allFiltAlfRef.current && secAllDivRef.current && allButtonFARef.current &&\n            divArrowRef.current && divDrLRef.current) {\n            const allFiltAlf = allFiltAlfRef.current;\n            const secAllDiv = secAllDivRef.current;\n            const allButtonFA = allButtonFARef.current;\n            const divArrow = divArrowRef.current;\n            const divDrL = divDrLRef.current;\n\n            allFiltAlf.style.height = realScreenWidth / 24 + 'px';\n            allFiltAlf.style.width = realScreenWidth / 10 + 'px';\n            secAllDiv.style.height = realScreenWidth / 5 + 'px';\n            secAllDiv.style.width = realScreenWidth / 9.1 + 'px';\n            allButtonFA.style.fontSize = realScreenWidth / 71 + 'px';\n            allButtonFA.style.width = realScreenWidth / 10 + 'px';\n            allButtonFA.style.height = realScreenWidth / 24 + 'px';\n            allButtonFA.style.gap = realScreenWidth / 66.67 + 'px';\n            allButtonFA.style.paddingLeft = realScreenWidth / 200 + 'px';\n            allButtonFA.style.borderRadius = realScreenWidth / 100 + 'px';\n            divArrow.style.height = realScreenWidth / 50 + 'px';\n            divArrow.style.width = realScreenWidth / 50 + 'px';\n            divDrL.style.borderRadius = realScreenWidth / 100 + 'px';\n        }\n    });\n\n    const remCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            divDrLRef.current.classList.remove(css.divDrLAct);\n            divArrowRef.current.classList.remove(css.divArrowAct);\n            window.removeEventListener('click', remCl);\n            setDrListOn(false);\n        }\n    };\n\n    const addCl = () => {\n        if (divDrLRef.current && divArrowRef.current) {\n            setTimeout(() => {\n                setDrListOn(true);\n                divDrLRef.current.classList.add(css.divDrLAct);\n                divArrowRef.current.classList.add(css.divArrowAct);\n                window.addEventListener('click', remCl);\n            }, 0)\n        }\n    };\n\n    const clickAllB = () => {\n        if (drListOn) {\n            remCl();\n        } else {\n            addCl();\n        }\n    };\n\n    return (\n        <div ref={allFiltAlfRef} className={css.allFiltAlf}>\n            <div ref={secAllDivRef} className={css.secAllDiv}>\n                <button type=\"button\" ref={allButtonFARef} className={css.allButtonFA} onClick={clickAllB}>\n                    <p>{filVal}</p>\n                <div ref={divArrowRef} className={css.divArrow}></div>\n            </button>\n            <div ref={divDrLRef} className={css.divDrL}>\n                <DropListDate/>\n            </div>\n            </div>\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"allFilters\":\"Filters_allFilters__6nONa\"};","import { Filter } from \"../Filter/Filter\";\nimport { FilterAlf } from \"../FilterAlf/FilterAlf\";\nimport { FilterPrice } from \"../FilterPrice/FilterPrice\";\nimport { FilterDate } from \"../FilterDate/FilterDate\";\nimport css from './Filters.module.css';\nimport { useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectScreenWidth } from \"../../redux/selectors\";\n\nexport const Filters = () => {\n    const allFiltersRef = useRef(null);\n\n    const realScreenWidth = useSelector(selectScreenWidth);\n\n\n    useEffect(() => {\n        if (allFiltersRef.current) {\n            const allFilters = allFiltersRef.current;\n            allFilters.style.gap = realScreenWidth/100 + 'px';\n        };\n    });\n\n    return (\n        <div ref={allFiltersRef} className={css.allFilters}>\n            <Filter />\n            <FilterAlf />\n            <FilterPrice />\n            <FilterDate />\n        </div>\n    )\n};","import { useDispatch } from \"react-redux\";\nimport { fetchDrugs, fetchPharmacies } from \"../../redux/opertions\";\nimport { PharmaciesList } from \"../PharmaciesList/PharmaciesList\";\nimport { DrugsList } from \"../DrugsList/DrugsList\";\nimport css from \"./Shop.module.css\";\nimport { Filters } from \"../Filters/Filters\";\n\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n\n    dispatch(fetchDrugs());\n    dispatch(fetchPharmacies());\n\n    return (\n        <>\n            <Filters/>\n            <div className={css.allShopDiv}>\n                <PharmaciesList/>\n                <DrugsList/>\n            </div>\n        </>\n    )\n};\n\nexport default Shop;"],"names":["Pharmacy","_ref","pharmacy","disp","useDispatch","actId","useSelector","selectFilterPharm","realScreenWidth","selectScreenWidth","phormasyButtonRef","useRef","useEffect","current","phormasyButton","style","width","height","fontSize","id","classList","add","css","remove","_jsx","ref","className","type","onClick","setPhafm","children","name","PharmaciesList","pharmacies","selectPharmacies","realScreenHeight","selectScreenHeight","allPharmaciesListDivRef","pharmaciesHlllRef","pharmaciesUlRef","allIdsPh","map","p","allPharmaciesListDiv","pharmaciesHlll","pharmaciesUl","concat","margin","padding","gap","includes","join","length","_jsxs","_Fragment","ph","Drug","drug","dispatch","favDr","selectFavoriteDrugs","shDr","selectDrugsForShop","isFav","inTrol","some","sd","addToBackedButRef","drugDivRef","divAddToBackedButRef","favoriteRef","infoDrugRef","drugLiRef","drugImgRef","addOrDel","delFavoriteDrugs","delFavDr","addFavoriteDrugs","addFavDr","addTrOrDel","d","delDrFShop","delDrSh","addDrFShop","addDrSh","drugLi","drugDiv","addToBackedBut","divAddToBackedBut","favorite","infoDrug","drugImg","widthSize","paddingBottom","right","bottom","borderRadius","top","marginLeft","src","image","alt","price","dataWasAdded","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","_toConsumableArray","Array","_","index","DrugsList","allDrugs","selectDrugs","fevDrugsId","filter","selectFilter","selAlf","selectFilterAlf","selPr","selectFilterPrice","selDate","selectFilterDate","allPharm","isLoading","selectIsLoading","_useState","useState","_useState2","_slicedToArray","drugs","setDrugs","_useState3","_useState4","fevDrRend","setFevDrRend","_useState5","_useState6","notFvDrRend","setNotFvDrRend","fevDrugsIdRef","pNoFoundRef","pasDrugs","actPh","find","available","parseDate","dateString","parts","split","Date","sort","a","b","localeCompare","parseFloat","replace","contact","toLowerCase","allDrugsListDivRef","drugsUlRef","allDrugsListDiv","allDrugsListDivWidth","drugsUl","dr","Math","random","Filter","filterWithState","placeholderValue","setPlaceholderValue","inputFilterRef","inputFilter","value","placeholder","onChange","evt","preventDefault","filterValue","target","setFilter","DropListAlf","ulDrLRef","firstChildRef","lastChildRef","setState","l","setAlf","setPrice","setDate","ulDrL","firstChild","lastChild","buttonFAs","document","querySelectorAll","divArrows","forEach","buttonFA","paddingLeft","divArrow","FilterAlf","allFiltAlfRef","secAllDivRef","allButtonFARef","divDrLRef","divArrowRef","drListOn","setDrListOn","filVal","setFilVal","allFiltAlf","secAllDiv","allButtonFA","divDrL","remCl","window","removeEventListener","setTimeout","addEventListener","DropListPrice","FilterPrice","DropListDate","FilterDate","w","Filters","allFiltersRef","fetchDrugs","fetchPharmacies"],"sourceRoot":""}